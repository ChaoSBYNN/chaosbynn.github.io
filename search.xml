<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Do have faith in what you are doing All for a better world</title>
    <url>/2017/02/22/Do-have-faith-in-what-you-are-doing-All-for-a-better-world/</url>
    <content><![CDATA[<blockquote>
<p>转载<br><a class="link"   href="http://www.nowamagic.net/librarys/veda/detail/2502" >http://www.nowamagic.net/librarys/veda/detail/2502 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> Do have faith in what you are doing.</p>
</blockquote>
<p>先不要往下看，试试品尝上面这句话的含义。</p>
<p>引用 Facebook Mark Zuckerberg 的一句话：</p>
<blockquote>
<p>“You have to have passion for what you are doing. If you don’t completely love or believe in what you are doing, the natural thing will be to give up when you face the challenges that will inevitably come. More than anything you have to really have faith in what you are doing.”</p>
</blockquote>
<p>简单翻译如下：</p>
<blockquote>
<p>你必须对你所做的事情很有激情。如果你没有完全喜欢或信任你所做的事情，当你面对挑战的时候，自然而然就会放弃，经不起变革。一定要相信你现在做的事情，对你做的事情保持信仰，这比任何事情都重要。</p>
</blockquote>
<p>我认为，Mark Zuckerberg 确实已做到了改变世界。从校园里走出来的 Facebook，风靡全球。</p>
<p>乔布斯在斯坦福大学的演讲中也谈到：</p>
<blockquote>
<p>你必须找到你所爱的。无论是工作还是爱人。工作将占据你生命中大部分时间，你只有相信自己所做的是伟大的工作, 才能怡然自得。而有伟大成就的唯一途径就是爱你所做的。— Steve Jobs</p>
</blockquote>
<p>乔布斯改变世界了吗？有目共睹。</p>
<p>Do have faith in what you are doing. 或许就是他们成功的共同秘诀。</p>
<h3 id="其一"><a href="#其一" class="headerlink" title="其一"></a>其一</h3><p>我们都知道要做自己喜欢的，但自己真正喜欢什么，却未必清楚。也很少有时间问问自己：这辈子究竟要做些什么？怎么做才无愧此生？生活就像一个没有设置break的while True循环，一旦开始就停不下来了。上班要忙上班的事，周末要聚会，看电影，玩游戏，逛街，把上班时的痛苦补回来，然后在不情愿中迎接下一个周一。这是自己想要的生活吗？</p>
<p>我们先来看看一个问题：如何找到自己所爱的？</p>
<p>真正让自己热血沸腾的是我们可以一直做自己最爱的事，但却没有循序渐进的教程可以帮助我们找到自己所爱的。以往的经验能起一点作用，但无法形成一套体系。</p>
<p>为了找到自己的热情，可以问自己：如果有一百万美元，你想做什么？</p>
<p>典型的回答是：会把这些钱存入银行，然后每年光利息就可以生活了。然后会搬到夏威夷，买一个别墅，品尝所有的美味，看看书，搞点体育运动，等等。</p>
<p>这样的回答有帮助吗？可能吧。比如，你知道了自己原来是个大懒鬼，但这并没有回答背后的问题：如何能做自己喜欢的事，还能挣到钱？</p>
<p>人们从事着自己讨厌的工作，感觉像掉入了陷阱，因为他们无法离开，他们靠着这唯一的收入来维持目前的生活状态，以此来逃避现实，漂流在严酷、漫无目的的生活中，简而言之：活在平静的绝望中。</p>
<p>平静的绝望，这是个深渊。很多人就在这个深渊里，耗费掉自己的一辈子。</p>
<p>你或许会问：他们为什么不辞职，追求自己喜欢的呢？</p>
<p>主要原因有两个：</p>
<ol>
<li>他们不知道自己最喜欢的事</li>
<li>恐惧。他们要维持目前的生活，有账单要付，家人要照顾，怕没有稳定的收入来源，怕别人异样的目光或说三道四，等等。</li>
</ol>
<p>搞定原因1，接下来的就会迎刃而解。</p>
<p>无论你信不信，想要找到自己的激情所在已经是一个很大的进步了。很多人，他们一生都在回避或者根本没想过这个问题。当他们听到这个问题时，会很熟练地忽视之。</p>
<p>如何找到自己所爱的？这是一个很重要的问题，而你必须找到答案。</p>
<p>对，必须要。</p>
<p>你必须自己决定目的地，不然生活就会替你做决定。如果知道了目的地，剩下的就很简单了。你会发现，一旦你找到了自己所爱的，所有的不确定、负担都会从你的肩上滑落，你会很清楚地看到自己的旅程，一趟充满欢喜的旅程。</p>
<h3 id="其二"><a href="#其二" class="headerlink" title="其二"></a>其二</h3><p>为什么找到自己所爱的那么难？</p>
<p>答案是：</p>
<p>这一点都不难。</p>
<p>那为什么这么多人都被这个问题所困扰呢？</p>
<p><strong>因为他们从未真正地问过自己。</strong></p>
<p>我觉得很有意思的一件事是，人们好像总是要让自己做点什么，停不下来。比如：出去玩、聚会、逛街等等。不要误解，做这些事没有任何问题。但我怀疑大部分人都有这样的心态：我必须每时每分都做点什么，因为我做不了自己。只是想让自己在别人面前看起来风光一点。但事实上，要让自己充实起来，应该多花一点时间在自己身上。</p>
<p>人们以为必须环游世界，尝试新事物等等才能找到自己的所爱。不，你只要坐下来，然后决定。答案已经在你心里。你只要把它挖出来，别耽搁。</p>
<p>说实话，你有没有曾经独自一人坐下来，抛开手机，离开电脑，关上电视、聊天工具，关上自己最爱听的歌，关闭游戏，停止检查邮件、回复电话、浏览杂志等等其他一切分心的事，扪心自问：自己到底喜欢什么？</p>
<p>你害怕问题的答案，因为答案是：我不知道。</p>
<p>这也是为什么你必须找到答案的原因。承认自己不知道，这是ok的，比那些自动跳过的好多了。下面让我们一步一步地来找到答案。</p>
<h3 id="其三"><a href="#其三" class="headerlink" title="其三"></a>其三</h3><p><strong>1. 只要你愿意，就一定会找到答案</strong></p>
<p>你一定会找到，无庸置疑。</p>
<p>带着这样的心态，你就一定会找到。会花多长时间？不重要。你终将会找到。</p>
<p>这样做，你会自动开启反放弃机制，因为你知道你一定会找到答案。</p>
<p>比如，如果你知道你要去纽约，你就会找到去那里的方法，你会搭车、火车或飞机，然后到达。</p>
<p>如果没有钱，你可以借，或者找份工作省钱，或者找一份空姐&#x2F;空哥的工作，这样就可以免费去那。花多长时间不重要，要做些什么也不重要，因为你知道你要去纽约。</p>
<p>你这个决定之后所有的行动都会围绕着『去纽约』而展开。</p>
<p>再读一遍最后这句：</p>
<p>你这个决定之后所有的行动都会围绕着『去纽约』而展开。</p>
<p>找到你所爱的 ＝ 决定去纽约。</p>
<p><strong>2. 列一个技能清单和兴趣列表</strong></p>
<p>再强调一遍：写下来。不要以为你可以在头脑中完成。</p>
<p>我这说的技能是任何技能。可以是无形的。比如编程，网页制作，聊天，倾听，说服别人，打字，调情，分析，演讲，让事情易于理解，吹口哨等等。不要害羞，列出所有自己的技能。</p>
<p>在另一列，列出自己的兴趣，同样，也不要害羞。列出所有你能想到的兴趣。蜘蛛、鞋子、头发、化妆品、篮球、网球、幻想、保姆、散步、PS、Fireworks、帮助别人、搞笑、钓鱼、空手道、瓶起子等等，什么都行。是的，我提到了瓶起子。你的兴趣也可以包含自己擅长的方面。计算机、经济学、生物学、篮球、足球、魔术等等。</p>
<p>为了帮助你写下更多的兴趣爱好，想想之前的那份工作你最感兴趣的是什么，不感兴趣的又是什么。</p>
<p>问自己以下这些问题有助于发现自己追求的技能和兴趣：</p>
<ul>
<li>如果你去一个书店，那个书架上的书对你的引力最大？问问朋友他们眼中你的技能和兴趣。你会惊叹于他们的洞察力。</li>
<li>你把大多数的时间都花在了哪些事上？做这些事你期望得到怎样的结果？像小孩子一样想像自己的成就。都有哪些技能和兴趣对你的成就有帮助？</li>
<li>你做了什么别人会感谢你？</li>
<li>你的老师或家人有没有说过你有什么诀窍？</li>
<li>为什么我一再强调技能和兴趣？</li>
</ul>
<p>技能：你必须依赖你的强项。不要告诉我你什么也没有。每个人都有技能。你只是没有坐下来细想，并且写下来。</p>
<p>兴趣：很简单，你必须爱你所做的。</p>
<p>专注于你能想到的兴趣和技能，并且写下来。</p>
<p>你会发现你的技能好像受了引力作用一样偏向一种或两种技能，兴趣也一样。好，下面让我们进入步骤3。</p>
<p><strong>3. 问正确的问题来找到自己的最爱</strong></p>
<p>找一个真正属于自己的时间和空间，没有任何分心的东西，通过问正确的问题来找到自己的最爱。</p>
<p>我发现一个很有趣的现象，人们总是为税务、烹饪、电影、阅读留出时间，但是涉及到自己的将来时，却从来不会腾出时间。</p>
<p>现在，假如你已经安排了私人时间，没有杂事干扰，然后呢？你必须问自己一个清晰的问题，清晰是关键，问题越清晰，回答越简单。</p>
<p>比如，我问，12x12等于多少？答案很明了：144。</p>
<p>如果我问两个偶数和另外两个偶数的乘积？这就很难回答了。</p>
<p><strong>清晰的问题引出清晰的答案</strong></p>
<p>另外一个关键点是：写下来。我知道你听过一万次了，不过这是有原因的。把东西写下来有助于你在各项之间建立联系，这在脑海里是很难完成的。</p>
<p>如果你在之前的阶段没有写下技能和兴趣，那么停下，马上写下来。放在大脑里是不会有帮助的。</p>
<p>现在利用独处的时间问自己一个清晰的问题，这个问题会是：“我最喜欢做什么？”吗？</p>
<p>这个问题有点广泛了，再缩小一点，问自己：</p>
<p><strong>在每天的生活中，我最喜欢做什么，可以同时结合我的技能和兴趣，并给人们的生活带来重大价值？</strong></p>
<p>看到区别了吗？问题越具体，越清晰，回答起来就越方便。我为什么加了价值这一项？因为这会帮助你找到挣钱的方法。</p>
<p>“通过技能和兴趣带来重大价值”，可以自动过滤那些普遍的答案，如：“看电视”，或“玩游戏”，这些答案往往会带来消极因素，因为看不到挣钱的方法。</p>
<p>顺带一句，很多人会误解这句话的核心，把重点放在了挣钱上。钱只是通过产品或服务为人们的生活带去方便的一个副产品。</p>
<p>当你知道你可以为别人的生活带来方便时，你就会知道如何挣钱。打开Word或纸张，在最前面写下这个问题。</p>
<p>在每天的生活中，我最喜欢做什么，可以同时结合我的技能和兴趣，并给人们的生活带来重大价值？</p>
<p>再强调一遍，重点是写下你自己的答案。</p>
<p>看看之前列的两列清单，写下答案，有多少，写多少。不必完美，也不一定要有什么意义。因为迟早你会把这些关连起来。下面这个故事可以帮助阐述我的意思。</p>
<blockquote>
<p>有一个小镇，以滑雪而出名，吸引了一大批游客前来，这对于促进经济有很大的作用。但是，下雪时，雪会沉积在电缆上，直到把电缆压跨，导致部分能源过载。慢慢的游客们都不来了，于是小镇举行了一个会议，讨论如何解决雪压跨电缆的问题。很久都没有好的解决方案。</p>
</blockquote>
<p>突然有人在会议室的后面大声喊道“我们可以在电缆上放几盆蜂蜜，让熊爬上电缆，拿到蜂蜜，熊的这一系列动作会把电缆上的雪抖落”</p>
<p>在座的都笑了，有人接这个话茬“那我们怎么再在这些盆里放蜂蜜呢？”“可以用直升飞机”，另一个人说。</p>
<p>于是答案就出来了，让直升飞机在电缆上飞，通过螺旋桨的风力把雪吹落。</p>
<p>我想说的是，无论答案有多可笑，都不用害怕，因为它们常常能帮你找到最终的结果。这是过程的一部分。</p>
<p>所以无论多滑稽，写下来。写下所有的答案。直到你有了20个答案，然后回顾它们。你会发现，你写下的答案会帮助你找到新的答案。</p>
<p>你会惊叹写下的所有东西，以及各个富有创意的想法。</p>
<p><strong>现在又要集中注意力了</strong></p>
<p>你肯定听过通过放大镜来聚焦阳光的事。但我还是想说，如果你打算一次处理多件事，那么哪件事都完不成。即使在最热的天，如果你不停移动放大镜，并不会聚焦多大的能量，什么也烧不着。只是无端地浪费自己的精力。</p>
<p>通过管理你的精力，时间，思考等等，在攻克一个目标时，你会惊叹目标完成的深度和效率。就像你在一个东西上放了一个放大镜，而你的欲望，精力，时间，思考，想像就是太阳光。</p>
<p>专注很重要，这里我想再举个例子。想像自己是一只猎豹，正在追逐两只羚羊。如果想同时追逐两个的话，那么什么也抓不到，只能饿死。先拿下一只，这可能需要时间去追击去撕咬，但当你真的吃掉了它，你又充满电了。你可以收集信息：羚羊都往哪个方向跑了，可能在哪块停留，等等。这有助于你今后捕获更多的羚羊，这就形成了良性循环。简而言之：专注于一个目标。</p>
<p>所以检查你刚刚的列表，选择一个最感兴趣的。你可能会发现，你可以把多个想法集中到一个。最好选择一个不仅能给自己带来极大的满足感，还能够帮助别人的想法。</p>
<h3 id="其四"><a href="#其四" class="headerlink" title="其四"></a>其四</h3><p>如何知道自己已经找到了最爱？</p>
<p>做这件事让你觉得爽吗？如果发自肺腑地觉得很爽，那就对了。如果你的朋友跟你谈论这个话题，你愿意跟他没完没了地谈论吗？</p>
<p>你必须毫无保留地喜欢这件事。如果你感到一丁点的怀疑，那这就不是你的激情所在。你必须急切地渴望克服任何困难来追逐你的激情。</p>
<p>一旦你找到了这件事，你的任务就完成了。至于如何通过它来挣钱，在你写下答案时，可能已经找到方法了。如果想找到更多挣钱的方法，只需重复之前的步骤。</p>
<ol>
<li>Step 1: 毫无疑问，你一定会找到答案</li>
<li>Step 2: 分两列，列一个技能清单和兴趣列表，并且写下来，你会发现其实有很多挣钱的方法</li>
</ol>
<p>挣钱的方法只能靠你自己了，不过对你来说应该不难。现在你知道了自己的最爱以及如何挣钱，该是行动的时候了。</p>
<p>很多人看到这里，没有任何行动，所以他们的生活也没有发生任何变化。</p>
<p><strong>Faith</strong></p>
<p>Faith，直译就是“信仰，信念”。</p>
<p>以我自己为例吧。当我对一个技术或知识不懂的时候，我会决定，是否要把它拿下。如果决定要拿下，我就会做一个专题，把资料都整理好，发布到 “现代魔法学院”上去。“现代魔法学院” 是我现在在做的一个个人项目。比如我正在研究 “编程范式”， 发现 “函数式编程” 我没有掌握透，我就专门开辟一个 “函数式编程” 的 chapter，为了实践函数式编程，我会学习一门函数式编程语言，比如 Python。这时候，就开辟了一个新天地，比如用 Python 做 Web 开发，Django 框架的学习等等……每一个知识点，我都会整理成一个 chapter，然后 chapter 又归类到 part 中。如此，连成一个整体性的知识体系。</p>
<p>为什么每一篇都要发布在学院里？自己懂了不就行了，为啥要花这么多时间和精力再重复一次？因为我相信，我现在遇到的问题，以后一定有人会遇到。我现在整理好，发布到学院，一定会给后来者提供极大的方便，还有极系统的知识体系。这就是我的 Faith，还有我所做的“简明现代魔法”的 Faith。</p>
<p>Do have faith in what you are doing.</p>
<p>All for a better world.</p>
]]></content>
      <tags>
        <tag>转载</tag>
      </tags>
  </entry>
  <entry>
    <title>Git flow</title>
    <url>/2017/04/15/Git-flow/</url>
    <content><![CDATA[<h3 id="Production-Master-分支-：-合并读取"><a href="#Production-Master-分支-：-合并读取" class="headerlink" title="Production|Master 分支 ： 合并读取"></a>Production|Master 分支 ： 合并读取</h3><p>这个分支最近发布到生产环境的代码，最近发布的Release， 这个分支只能从其他分支合并，不能在这个分支直接修改</p>
<h3 id="Develop-分支-：-开发"><a href="#Develop-分支-：-开发" class="headerlink" title="Develop 分支 ： 开发"></a>Develop 分支 ： 开发</h3><p>这个分支是我们是我们的主开发分支，包含所有要发布到下一个Release的代码，这个主要合并与其他分支，比如Feature分支</p>
<h3 id="Feature-分支-：-相互独立"><a href="#Feature-分支-：-相互独立" class="headerlink" title="Feature 分支 ： 相互独立"></a>Feature 分支 ： 相互独立</h3><p>这个分支主要是用来开发一个新的功能，一旦开发完成，我们合并回Develop分支进入下一个Release</p>
<h3 id="Release分支-：-需求冻结"><a href="#Release分支-：-需求冻结" class="headerlink" title="Release分支 ： 需求冻结"></a>Release分支 ： 需求冻结</h3><p>当你需要一个发布一个新Release的时候，我们基于Develop分支创建一个Release分支，完成Release后，我们合并到Master和Develop分支</p>
<h3 id="Hotfix分支-：-紧急修复"><a href="#Hotfix分支-：-紧急修复" class="headerlink" title="Hotfix分支 ： 紧急修复"></a>Hotfix分支 ： 紧急修复</h3><p>当我们在Production发现新的Bug时候，我们需要创建一个Hotfix, 完成Hotfix后，我们合并回Master和Develop分支，所以Hotfix的改动会进入下一个Release</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_04_15_0.png"
                     
                ></p>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>JS 生成时间戳</title>
    <url>/2017/02/22/JS-%E7%94%9F%E6%88%90%E6%97%B6%E9%97%B4%E6%88%B3/</url>
    <content><![CDATA[<blockquote>
<p>JS生成时间戳三种方式</p>
</blockquote>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> timestamp1 = <span class="title class_">Date</span>.<span class="title function_">parse</span>(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line"><span class="keyword">var</span> timestamp2 = (<span class="keyword">new</span> <span class="title class_">Date</span>()).<span class="title function_">valueOf</span>();</span><br><span class="line"><span class="keyword">var</span> timestamp3 = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>()；</span><br></pre></td></tr></table></figure></div>
<h3 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h3><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> timestamp1 = <span class="title class_">Date</span>.<span class="title function_">parse</span>(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br></pre></td></tr></table></figure></div>
<pre><code>指定的日期和时间据 1970/1/1 午夜（GMT 时间）之间的毫秒数。
</code></pre>
<h5 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h5><blockquote>
<p>1120752000000</p>
</blockquote>
<h3 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h3><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> timestamp2 = (<span class="keyword">new</span> <span class="title class_">Date</span>()).<span class="title function_">valueOf</span>();</span><br></pre></td></tr></table></figure></div>
<pre><code>返回 1970 年 1 月 1 日至今的毫秒数。
</code></pre>
<h5 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h5><blockquote>
<p>1120752000234</p>
</blockquote>
<h3 id="方式三"><a href="#方式三" class="headerlink" title="方式三"></a>方式三</h3><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> timestamp3 = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>()；</span><br></pre></td></tr></table></figure></div>
<pre><code>返回 Date 对象的原始值。
</code></pre>
<h5 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h5><blockquote>
<p>1120752000234</p>
</blockquote>
]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>JSSDK 微信接口与 Java 结合</title>
    <url>/2017/02/22/JSSDK-%E5%BE%AE%E4%BF%A1%E6%8E%A5%E5%8F%A3%E4%B8%8E-Java-%E7%BB%93%E5%90%88/</url>
    <content><![CDATA[<h1 id="JSSDK微信接口-Java接入-转发分享信息"><a href="#JSSDK微信接口-Java接入-转发分享信息" class="headerlink" title="JSSDK微信接口 Java接入 转发分享信息"></a>JSSDK微信接口 Java接入 转发分享信息</h1><p>[TOC]</p>
<hr>
<blockquote>
<p><a class="link"   href="http://dwz.cn/1KsMyS"  target="_blank"> [ JSSDK文档 ] <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 微信JS-SDK是微信公众平台面向网页开发者提供的基于微信内的网页开发工具包。   </p>
<p><a class="link"   href="http://dwz.cn/3WfAJS"  target="_blank">  [获取token文档 ] <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> JS-SDK获取access_token文档<br><strong>ChaoS_Zhang</strong> , 更多信息 , 具体请参考<a class="link"   href="https://github.com/ChaoSBYNN" >GitHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.<a href="#"> [t7_chaos@163.com]</a>  .</p>
</blockquote>
<p>##流程图</p>
<blockquote>
<p>流程图：</p>
</blockquote>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">st=&gt;start: 开始</span><br><span class="line">e=&gt;end: 结束</span><br><span class="line">op1=&gt;operation: 获取本地存储token</span><br><span class="line">op2=&gt;operation: 通过微信公众号 </span><br><span class="line">				appid与secret </span><br><span class="line">				获取新的access_token</span><br><span class="line">op3=&gt;operation: 获取jsapi_ticket</span><br><span class="line">cond1=&gt;condition: 判断最近修改日期</span><br><span class="line">是否不超过7200秒？</span><br><span class="line">cond2=&gt;condition: 判断获取的</span><br><span class="line">				jsapi_ticket是否正常</span><br><span class="line">				[异常情况:token过期]</span><br><span class="line">st-&gt;op1-&gt;cond1-&gt;op3-&gt;cond2-&gt;e</span><br><span class="line">op2-&gt;op3</span><br><span class="line">cond1(no)-&gt;op2</span><br><span class="line">cond1(yes)-&gt;op3</span><br><span class="line">cond2(no)-&gt;op2</span><br><span class="line">cond2(yes)-&gt;e</span><br></pre></td></tr></table></figure></div>


<blockquote>
<p><strong>注意：</strong>临界值操作，<strong>临界值时虽然没有超过7200秒,但是token已经过期,需要重新获取</strong>。</p>
</blockquote>
<h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><blockquote>
<p>###WXTokenServiceImpl 业务逻辑</p>
</blockquote>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"><span class="keyword">import</span> java.text.DateFormat;</span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Formatter;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.listenlives.dao.WXTokenDao;</span><br><span class="line"><span class="keyword">import</span> com.listenlives.domain.WXToken;</span><br><span class="line"><span class="keyword">import</span> com.listenlives.information.util.HttpHelper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.sf.json.JSONObject;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> ChaoS_Zhang t7_chaos@163.com </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2016年8月12日 上午11:00:02</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>  获取微信公众号有效期7200m access_token &lt;br/&gt;二次转发分享页面</span></span><br><span class="line"><span class="comment"> * &lt;br/&gt;</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> http://dwz.cn/1KsMyS 微信JS-SDK说明文档&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SuppressWarnings(&quot;static-access&quot;)</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WXTokenServiceImpl</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 * toekn持久化</span></span><br><span class="line"><span class="comment">	 * updateWXToken(WXToken wxToken) 更新本地token&lt;br/&gt;</span></span><br><span class="line"><span class="comment">	 * selectWXToken() 获取本地token</span></span><br><span class="line"><span class="comment">	 * /</span></span><br><span class="line"><span class="comment">	@Resource</span></span><br><span class="line"><span class="comment">	private WXTokenDao wxTokenDao;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	public Map&lt;String, String&gt; getJSAPITicket(String url) &#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">		Map&lt;String, String&gt; resultMap = new HashMap&lt;String, String&gt;();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">		/*</span></span><br><span class="line"><span class="comment">		 * 微信接口所需返回项</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="type">String</span> <span class="variable">nonce_str</span> <span class="operator">=</span> create_nonce_str();</span><br><span class="line">		<span class="type">String</span> <span class="variable">timestamp</span> <span class="operator">=</span> create_timestamp();</span><br><span class="line">		<span class="type">String</span> <span class="variable">signature</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">		<span class="type">String</span> <span class="variable">jsapiTicket</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">		<span class="type">String</span> <span class="variable">assceeToken</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="type">WXToken</span> <span class="variable">wxToken</span> <span class="operator">=</span> wxTokenDao.selectWXToken();</span><br><span class="line"></span><br><span class="line">			assceeToken = wxToken.getAccessToken();</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> (compareWithExpiresIn(wxToken.getCreateTime())) &#123;</span><br><span class="line"></span><br><span class="line">				assceeToken = getNewAccessToken();</span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			jsapiTicket = getNewJSAPITicket(assceeToken, <span class="number">0</span>).get(<span class="string">&quot;ticket&quot;</span>).toString();</span><br><span class="line"></span><br><span class="line">			<span class="comment">/*</span></span><br><span class="line"><span class="comment">			 * 当前分享页面url </span></span><br><span class="line"><span class="comment">			 * 注意这里参数名必须全部小写,且必须有序&#x27;&#x27;&#x27;微信要求&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line">			signature = <span class="string">&quot;jsapi_ticket=&quot;</span> + jsapiTicket + </span><br><span class="line">								<span class="string">&quot;&amp;noncestr=&quot;</span> + nonce_str + </span><br><span class="line">								<span class="string">&quot;&amp;timestamp=&quot;</span> + timestamp + </span><br><span class="line">								<span class="string">&quot;&amp;url=&quot;</span> + url;</span><br><span class="line"></span><br><span class="line">			<span class="type">MessageDigest</span> <span class="variable">crypt</span> <span class="operator">=</span> MessageDigest.getInstance(<span class="string">&quot;SHA-1&quot;</span>);</span><br><span class="line">			crypt.reset();</span><br><span class="line">			crypt.update(signature.getBytes(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line"></span><br><span class="line">			signature = byteToHex(crypt.digest());</span><br><span class="line"></span><br><span class="line">		&#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		resultMap.put(<span class="string">&quot;url&quot;</span>, url);</span><br><span class="line">		resultMap.put(<span class="string">&quot;nonceStr&quot;</span>, nonce_str);</span><br><span class="line">		resultMap.put(<span class="string">&quot;timestamp&quot;</span>, timestamp);</span><br><span class="line">		resultMap.put(<span class="string">&quot;signature&quot;</span>, signature);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> resultMap;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 比较当前时间与上一次获取Token时间是否相差2小时 有效期7200秒</span></span><br><span class="line"><span class="comment">	 * &#123;<span class="doctag">@link</span> http://dwz.cn/3WfAJS 微信JSSDK access_token文档&#125;</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">compareWithExpiresIn</span><span class="params">(String createTime)</span> &#123;</span><br><span class="line"></span><br><span class="line">		<span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">		<span class="type">DateFormat</span> <span class="variable">df</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line"></span><br><span class="line">		Date nowDate;</span><br><span class="line">		Date tokenDate;</span><br><span class="line">		<span class="type">long</span> diff;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">			nowDate = df.parse(df.format(<span class="keyword">new</span> <span class="title class_">Date</span>()));</span><br><span class="line">			tokenDate = df.parse(createTime);</span><br><span class="line">			</span><br><span class="line">			diff = nowDate.getTime() - tokenDate.getTime();</span><br><span class="line">			</span><br><span class="line">			<span class="comment">/*</span></span><br><span class="line"><span class="comment">			 * 微信2小时 7200m 变更token</span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line">			flag = diff &gt; <span class="number">7200000</span>;</span><br><span class="line"></span><br><span class="line">		&#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> flag;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">byteToHex</span><span class="params">(<span class="keyword">final</span> <span class="type">byte</span>[] hash)</span> &#123;</span><br><span class="line">		<span class="type">Formatter</span> <span class="variable">formatter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Formatter</span>();</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">byte</span> b : hash) &#123;</span><br><span class="line">			formatter.format(<span class="string">&quot;%02x&quot;</span>, b);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> formatter.toString();</span><br><span class="line">		formatter.close();</span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 生成签名的随机串</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String <span class="title function_">create_nonce_str</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> UUID.randomUUID().toString();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 生成签名的时间戳</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String <span class="title function_">create_timestamp</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> Long.toString(System.currentTimeMillis() / <span class="number">1000</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getNewAccessToken</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;https://api.weixin.qq.com/cgi-bin/token&quot;</span>;</span><br><span class="line">		<span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">		<span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			Map&lt;String, String&gt; accessMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">			accessMap.put(<span class="string">&quot;grant_type&quot;</span>, <span class="string">&quot;client_credential&quot;</span>);</span><br><span class="line">			accessMap.put(<span class="string">&quot;appid&quot;</span>, $&#123;appid&#125;);</span><br><span class="line">			accessMap.put(<span class="string">&quot;secret&quot;</span>, $&#123;secret&#125;);</span><br><span class="line">			data = HttpHelper.post(accessMap, url);</span><br><span class="line">			<span class="keyword">if</span> (data != <span class="literal">null</span> &amp;&amp; data != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">				<span class="type">JSONObject</span> <span class="variable">json</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>().fromObject(data);</span><br><span class="line">				<span class="type">String</span> <span class="variable">access_token</span> <span class="operator">=</span> (String) json.get(<span class="string">&quot;access_token&quot;</span>);</span><br><span class="line">				<span class="keyword">if</span> (<span class="literal">null</span> != access_token &amp;&amp; !<span class="string">&quot;&quot;</span>.equals(access_token)) &#123;</span><br><span class="line"></span><br><span class="line">					<span class="type">WXToken</span> <span class="variable">wxToken</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WXToken</span>();</span><br><span class="line">					wxToken.setAccessToken(access_token);</span><br><span class="line">					wxTokenDao.updateWXToken(wxToken);</span><br><span class="line"></span><br><span class="line">					result = access_token;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title function_">getNewJSAPITicket</span><span class="params">(String accessToken, <span class="type">int</span> flag)</span> &#123;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">/*</span></span><br><span class="line"><span class="comment">		 * 避免死循环递归flag</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">if</span> (flag &gt; <span class="number">1</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;https://api.weixin.qq.com/cgi-bin/ticket/getticket&quot;</span>;</span><br><span class="line">		<span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">		Map&lt;String, Object&gt; resultMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;();</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">			Map&lt;String, String&gt; accessMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">			accessMap.put(<span class="string">&quot;access_token&quot;</span>, accessToken);</span><br><span class="line">			accessMap.put(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;jsapi&quot;</span>);</span><br><span class="line">		</span><br><span class="line">			data = HttpHelper.post(accessMap, url);</span><br><span class="line">			</span><br><span class="line">			<span class="keyword">if</span> (data != <span class="literal">null</span> &amp;&amp; data != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">				</span><br><span class="line">				<span class="type">JSONObject</span> <span class="variable">json</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>().fromObject(data);</span><br><span class="line">				<span class="type">String</span> <span class="variable">ticket</span> <span class="operator">=</span> (String) json.get(<span class="string">&quot;ticket&quot;</span>);</span><br><span class="line">				<span class="keyword">if</span> (<span class="literal">null</span> != ticket &amp;&amp; !<span class="string">&quot;&quot;</span>.equals(ticket)) &#123;</span><br><span class="line">					resultMap.put(<span class="string">&quot;ticket&quot;</span>, ticket);</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					resultMap = getNewJSAPITicket(getNewAccessToken(), flag + <span class="number">1</span>);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> resultMap;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<blockquote>
<p>###WXToken 微信公众号token实体</p>
</blockquote>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> ChaoS_Zhang t7_chaos@163.com </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2016年8月12日 上午10:55:28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WXToken</span> &#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> String id;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> String accessToken;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> String createTime;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> id;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(String id)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.id = id;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getAccessToken</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> accessToken;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAccessToken</span><span class="params">(String accessToken)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.accessToken = accessToken;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getCreateTime</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> createTime;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCreateTime</span><span class="params">(String createTime)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.createTime = createTime;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<hr>
]]></content>
      <tags>
        <tag>WeChat</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java编程规范</title>
    <url>/2021/04/23/Java%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/</url>
    <content><![CDATA[<h1 id="Java开发规范"><a href="#Java开发规范" class="headerlink" title="Java开发规范"></a>Java开发规范</h1><p><code>题外话 你想成为什么样的开发 你现在是什么样的开发 下面所写的不需要每句都熟读 希望即使读了其中某一段 也会有原来如此的收获即可 如果下面描述存在问题 评论署名</code></p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2021-04-23-0.png"
                      height="300" width="1070" 
                >

<hr>
<p>[toc]</p>
<h2 id="前言-为什么需要编码规范1"><a href="#前言-为什么需要编码规范1" class="headerlink" title="前言 为什么需要编码规范1"></a>前言 为什么需要编码规范<a href="#refer-anchor-1"><sup>1</sup></a></h2><p>为什么需要编码规范，借用《Java编程语言代码规范》一段开场白：</p>
<blockquote>
<p>一个软件需要花费80%的生命周期成本去维护。 　　<br>几乎没有任何软件的整个生命周期仅由其原作者来维护。 　　<br>编码规范改善软件的可读性,让工程师更快更彻底地理解新的代码。 　　<br>如果你将源代码转变为一个产品,那么您需要确保它和你创建的其它产品一样是干净且包装良好的。</p>
</blockquote>
<p>好的代码结构和代码风格一般bug也相对少，当然除了编码规范，也少不了充分自测。[<sub>写代码一部分是完成工作用来给机器执行, 另一部分是给人使用的(我们都是创造者), 无论未来的维护这是不是你, 一段程序的健壮、扩展、灵活是很重要的一件事, 虽然它可有可无,也不会记录KPI,但是何必有杂念呢    — Sp!ke</sub>]</p>
<h2 id="1-如何命名"><a href="#1-如何命名" class="headerlink" title="1 如何命名"></a>1 如何命名</h2><blockquote>
<p>代码就是最好的注释[<sub>我们是如何读文章的, 你又是怎么样读懂我写的这句话的 —Sp!ke</sub>]</p>
</blockquote>
<h3 id="1-1-命名"><a href="#1-1-命名" class="headerlink" title="1.1 命名"></a>1.1 命名</h3><ol>
<li>如果模块、接口、类、方法使用了设计模式，在命名时体现出具体模式。</li>
<li>变量名应该简短且有意义，并能够顾名思义。简单并不意味着越短越好，比如一个字符的变量名是不允许的，很影响代码的可读性。</li>
</ol>
<p>[<sub>哪里是用缩写,哪里使用全拼,命名其他人能见词知义么,非英语母语的地区会有下一个问题<code>select get query find | selectOne getData queryInfo | findAll queryList getDatas</code>,是不是每个人都需一本字典才能开发,如果有是不是特定的字典 —Sp!ke</sub>]</p>
<h4 id="1-1-1-命名风格"><a href="#1-1-1-命名风格" class="headerlink" title="1.1.1 命名风格"></a>1.1.1 命名风格</h4><ol>
<li><p>代码中的命名均不能以$\color{CornflowerBlue}{下划线或美元符号}$ 开始，也不能以$\color{CornflowerBlue}{下划线或美元}$符号结束<br> $\color{OrangeRed}{反例:}  $ <code>_name / __name / $name / name_ / name$ / name__</code></p>
</li>
<li><p>代码中的命名均不能包含$\color{CornflowerBlue}{魔法数字或无意义的数字}$, 但是允许有意义的<br> $\color{MediumSeaGreen}{正例:}$ <code>timeout3s / list2Map / string2List</code><br> $\color{OrangeRed}{反例:}$ <code>table1 / i1 / a123aaa / str1</code></p>
</li>
<li><p>类名使用UpperCamelCase风格，但以下情形例外：DO &#x2F; BO &#x2F; DTO &#x2F; VO &#x2F; AO &#x2F; PO &#x2F; UID等<br> $\color{MediumSeaGreen}{正例:} $ <code>MarcoPolo / UserDO / XmlService / TcpUdpDeal / TaPromotion</code><br> $\color{OrangeRed}{反例:}$ <code>macroPolo / UserDo / XMLService / TCPUDPDeal / TAPromotion</code></p>
</li>
<li><p>方法名、参数名、成员变量、局部变量都统一使用lowerCamelCase风格，必须遵从驼峰形式<br> $\color{MediumSeaGreen}{正例:}$ <code>localValue / getHttpMessage() / inputUserId</code><br>[<sub>其实我并不是很热衷写这种用例, 虽然它很直观,但是阿里巴巴已经写好了,感兴趣可以直接下载附件,更多的是我们每书写一段代码是否有认真思考过,有些人没有命名意识会做错,有些人不知道但是拷贝的做会正确,有些人通过经验习惯做会正确,但是有没有停下来归纳一下正确的写法有哪些通用的,这会比写出一百两百个用例更有效 —Sp!ke</sub>]</p>
</li>
</ol>
<h4 id="1-1-2-常量、变量命名"><a href="#1-1-2-常量、变量命名" class="headerlink" title="1.1.2 常量、变量命名"></a>1.1.2 常量、变量命名</h4><p>[<sub>常量与变量命名并没有太多的点只是罗列几点 —Sp!ke</sub>]</p>
<p>变量:</p>
<ol>
<li>驼峰命名规则</li>
<li>第一个首字母小写后续单词首字母大写</li>
<li>减少不通用的缩写</li>
<li>命名需要满足阅读顺序 <code>actorListName</code> -&gt; <code>actorNameList</code>,  <code>sourcePrefixActorList</code>-&gt;<code>actorSourcePerfixList</code></li>
<li>不要加入无意义的魔法数字或者符号 <code>str1</code> -&gt; <code>origin</code> , <code>table13</code> -&gt; <code>mainTable</code></li>
<li>歧义的变量 例如：<code>logger</code> <code>LOGGER</code> 根据实际情况处理</li>
</ol>
<p>常量</p>
<ol>
<li>全大写</li>
<li>单词之间使用下划线做分割</li>
<li>其他规则参考变量</li>
</ol>
<h4 id="1-1-3-类命名"><a href="#1-1-3-类命名" class="headerlink" title="1.1.3 类命名"></a>1.1.3 类命名</h4><p>[<sub>类的命名是很重要的，但是不单单是命名更多的是名字就是他的职责与功能，类有两个点需要时刻注意 1.类型 2.命名 —Sp!ke</sub>]</p>
<h5 id="1-1-3-1-类型"><a href="#1-1-3-1-类型" class="headerlink" title="1.1.3.1 类型"></a>1.1.3.1 类型</h5><p>[<sub>无论下面哪种类型在编译之后都会以.class形式存在， 那么为什么又要拆分成不同类型呢，不同类型负责的职责也不同，当然你也可以混用但是不建议，失去了真正职责的类相当于，使用饭碗装排泄物 —Sp!ke</sub>]</p>
<ol>
<li><code>Class</code> 类 : 更泛泛的通用的容器，可以理解为 normal</li>
<li><code>Enum</code> 枚举类 : 枚举的特性在于内部的强关联，以及元素之间的规律性 <code>RED, BLUE, BLACK</code> 可以做一组枚举， 但是 <code>RED, NAME, JAVA</code>一组枚举就会莫名其妙</li>
<li><code>Interface</code> 接口类 : 接口在Java中作用其一是弥补Java单继承的不足，作用其二是更好实现OOP的多态[<sub>我们的代码中有将常量放在interface里定义的情况，并不是说这种不可以，首先不建议因为失去了Interface的真正意义，其次如何给Interface命名呢<code>UserConstant</code>么，还是需要思考一下吧 —Sp!ke</sub>]</li>
<li><code>Annotation</code> 注解类 : 注解类不做太多阐述，他的使用会使程序更加灵活，但也不可控[<sub>事物都存在双面性 —Sp!ke</sub>]</li>
</ol>
<h5 id="1-1-3-2-命名"><a href="#1-1-3-2-命名" class="headerlink" title="1.1.3.2 命名"></a>1.1.3.2 命名</h5><p>[<sub>我们所期待的良好的类命名是为了看到名字就知道作用 —Sp!ke</sub>]</p>
<p>包名 <code>(packages)</code> 建议后面追加<code>s</code>, 例如<code>Utils</code> <code>Constants</code> <code>Enums</code></p>
<hr>
<p>基础层 [<sub>每一层完成他自己的事情,不要越级处理 —Sp!ke</sub>]</p>
<ol>
<li><code>Controller</code>	$\color{CornflowerBlue}{后缀}$ Web控制层 负责请求分配, 具体交给<code>Service</code>还是重定向有具体业务判断, 建议只包含<code>Request</code> <code>Response</code>(可自定义) 数据的封装与下发 [<sub>上层、下层、底层、业务 Whatever —Sp!ke</sub>]</li>
<li><code>Service</code> $\color{CornflowerBlue}{后缀}$ 业务层 具体业务处理 由入口输入(<code>Controller</code> <code>Executer</code> 等进入 ) 负责加工、执行、处理调用数据层(<code>DAO</code> <code>Manager</code> <code>RedisTemplate</code> <code>Service</code>等)</li>
<li><code>DAO</code> <code>Dao</code> $\color{CornflowerBlue}{后缀}$ 数据持久层 与持久化层对接 只处理数据的 <code>CURD</code>操作、以及数据源使用[<sub>我理解一个完整的<code>DAO</code>包含了<code>MySQL</code> <code>Redis</code> <code>Mongo</code>等等的集成 而不是单一的处理 —Sp!ke</sub>]</li>
</ol>
<hr>
<p>常见类命名</p>
<ol>
<li><code>Application</code> $\color{CornflowerBlue}{后缀}$ 启动类 项目唯一主入口 [<sub>我建议业务类型服务只用<code>Application</code>命名即可,不需要加入具体业务前缀, 可以规范运维启动脚本 —Sp!ke</sub>]</li>
<li><code>Config</code> <code>Configuration</code> $\color{CornflowerBlue}{后缀}$ 配置类</li>
<li><code>Constant</code> $\color{CornflowerBlue}{后缀}$ 常量类 建议同一个常量类中常量具有相关性,便于管理以及类的命名 [<sub> 这个是否是常量<code>int timeout = 3;</code> —Sp!ke </sub>]</li>
<li><code>Enum</code> $\color{CornflowerBlue}{后缀}$ 枚举类 内部强关联 便于数据整理相当于多维<code>Constant</code></li>
<li><code>Interface</code> $\color{CornflowerBlue}{后缀}$ 接口 [<sub>接口是用来实现的, 失去了行为的接口是没有意义的</sub>]</li>
<li><code>Base</code> <code>Common</code> <code>Super</code> <code>Abstract</code> $\color{CornflowerBlue}{前后缀均可} $ <code>Abstract</code> $\color{CornflowerBlue}{前缀}$父类或基础类</li>
<li><code>Exception</code> $\color{CornflowerBlue}{后缀}$  异常类 异常类多指自定义异常</li>
<li><code>Impl</code> $\color{CornflowerBlue}{后缀}$  实现类 与 <code>Interface</code>相关,子母关系缺一不可 使用<code>extends</code>不要加<code>Impl</code>后缀</li>
<li><code>Utils</code>  $\color{CornflowerBlue}{后缀}$ 工具类 工具类<code>pulibc</code>修饰应加入 <code>static</code> 内部 <code>private</code>为特有</li>
<li><code>Data</code> <code>Entity</code> <code>Bean</code> <code>Domain</code> <code>Model</code> <code>POJO</code>  $\color{CornflowerBlue}{后缀}$ 实体</li>
</ol>
<p>[<sub>有一种说法 <code>Data</code> <code>Model</code> 修饰不需要加, 这是一种累赘的命名 类似<code>actorNameString</code> —Sp!ke</sub>]</p>
<p>实体、数据对象[<sup>4</sup>] (#refer-anchor-4) [<sup>5</sup>] (#refer-anchor-5)</p>
<blockquote>
<ol>
<li><code>Data</code> <code>Info</code> <code>Detail</code> [<sub>不好说没有这个规则, 只能说能看懂 —Sp!ke</sub>]<ol>
<li><code>Entity</code> 就是实体的意思，所以也是最常用到的，<code>Entity</code>包中的类是必须和数据库相对应的</li>
<li><code>Model</code> 最早与WEB相关, 是为页面提供数据和数据校验的</li>
<li><code>Domain</code> 代表一个对象模块, 这个包国外很多项目经常用到，字面意思是域的意思, 比如一个商城的项目，商城主要的模块就是用户，订单，商品三大模块，那么这三块数据就可以叫做三个域</li>
<li><code>POJO</code> <code>Plain OrdinaryJava Object</code>的缩写不错，但是它通指没有使用<code>Entity</code> <code>Beans</code>的普通java对象，可以把<code>POJO</code>作为支持业务逻辑的协助类</li>
<li><code>VO</code>  <code>View Object</code> 视图对象，用于展示层，它的作用是把某个指定页面（或组件）的所有数据封装起来</li>
<li><code>DTO</code> <code>Data Transfer Object</code> 数据传输对象，这个概念来源于J2EE的设计模式，原来的目的是为了EJB的分布式应用提供粗粒度的数据实体，以减少分布式调用的次数，从而提高分布式调用的性能和降低网络负载，但在这里，我泛指用于展示层与服务层之间的数据传输对象</li>
<li><code>DO</code> <code>Domain Object</code> 领域对象，就是从现实世界中抽象出来的有形或无形的业务实体</li>
<li><code>PO</code> <code>Persistent Object</code> 持久化对象，它跟持久层（通常是关系型数据库）的数据结构形成一一对应的映射关系，如果持久层是关系型数据库，那么，数据表中的每个字段（或若干个）就对应PO的一个（或若干个）属性。</li>
</ol>
</li>
</ol>
</blockquote>
<hr>
<p>对于常量<code>Class</code> <code>Interface</code>进行了一些文献查询，还是众说纷纭，只能说建议</p>
<blockquote>
<p>常量接口模式<br><strong>The constant interface pattern is a poor use of interfaces</strong> . That a class uses some constants internally is an implementation detail.<br>Implementing a constant interface causes this implementation detail to leak into the class’s exported API.<br>It is of no consequence to the users of a class that the class implements a constant interface. In fact, it may even confuse them.<br>Worse, it represents a commitment: if in a future release the class is modified so that it no longer needs to use the constants, it still must implement the interface to ensure binary compatibility.<br>If a nonfinal class implements a constant interface, all of its subclasses will have their namespaces polluted by the constants in the interface.<br>There are several constant interfaces in the java platform libraries, such as  <code>java.io.ObjectStreamConstants</code> .<br>These interfaces should be regarded as anomalies and should not be emulated.<br><strong>原文出自see <a class="link"   href="http://www.oracle.com/technetwork/java/effectivejava-136174.html" >Effective Java <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></strong></p>
</blockquote>
<p>一下连接仅供参考</p>
<ul>
<li><a class="link"   href="https://www.cnblogs.com/wanqieddy/p/9051568.html" >https://www.cnblogs.com/wanqieddy/p/9051568.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://blog.csdn.net/voo00oov/article/details/50433672" >https://blog.csdn.net/voo00oov/article/details/50433672 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://stackoverflow.com/questions/2659593/what-is-the-use-of-interface-constants" >https://stackoverflow.com/questions/2659593/what-is-the-use-of-interface-constants <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://docs.oracle.com/javase/tutorial/java/IandI/interfaceDef.html" >https://docs.oracle.com/javase/tutorial/java/IandI/interfaceDef.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<p>也有一种优雅的写法</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">public final class Constants &#123;</span><br><span class="line"></span><br><span class="line">    private Constants() &#123;</span><br><span class="line">        // restrict instantiation</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static final double PI = 3.14159;</span><br><span class="line">    public static final double PLANCK_CONSTANT = 6.62606896e-34;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<p>管理类命名</p>
<ol>
<li><code>Pool</code>  $\color{CornflowerBlue}{后缀}$ 池</li>
<li><code>Manager</code> <code>Mgr</code>  $\color{CornflowerBlue}{后缀}$ 管理器</li>
<li><code>Group</code>  $\color{CornflowerBlue}{后缀}$ 群</li>
<li><code>Proxy</code>  $\color{CornflowerBlue}{后缀}$ 代理类</li>
<li><code>Balance</code>  $\color{CornflowerBlue}{后缀}$ 均衡器</li>
<li><code>Container</code>  $\color{CornflowerBlue}{后缀}$ 容器</li>
</ol>
<hr>
<p>创建类命名</p>
<ol>
<li><code>Generator</code>  $\color{CornflowerBlue}{后缀}$ 生成器</li>
<li><code>Builder</code>  $\color{CornflowerBlue}{后缀}$ 构建器</li>
<li><code>Factory</code>  $\color{CornflowerBlue}{后缀}$ 工厂</li>
</ol>
<hr>
<p>协议通讯相关功能</p>
<ol>
<li><code>Msg</code> <code>Ack</code> <code>Req</code> <code>Resp</code>  $\color{CornflowerBlue}{前后缀均可,推荐后缀}$ 消息类</li>
<li><code>Header</code> <code>Body</code>  $\color{CornflowerBlue}{后缀}$ 头部 主体</li>
<li><code>Proto</code> <code>Protobuf</code>  $\color{CornflowerBlue}{后缀}$ 协议类</li>
<li><code>Sender</code>  $\color{CornflowerBlue}{后缀}$ 发送者</li>
<li><code>Receiver</code>  $\color{CornflowerBlue}{后缀}$ 接收者</li>
</ol>
<hr>
<p>其他功能</p>
<ol>
<li><p><code>Listener</code>  $\color{CornflowerBlue}{后缀}$ 监听</p>
</li>
<li><p><code>Filter</code>  $\color{CornflowerBlue}{后缀}$ 过滤器 Java中起源于Servlet</p>
</li>
<li><p><code>Interceptor</code>  $\color{CornflowerBlue}{后缀}$ 拦截器 Java中起源于Spring<br>[<sub>从某种意义上来说 <code>Filter</code> <code>Interceptor</code> 并没有冲突 他们是两个容器的筛选 存在顺序关系 可以查看容器的结构 —Sp!ke</sub>]</p>
</li>
<li><p><code>Executer</code>  $\color{CornflowerBlue}{后缀}$ 处理器 [<sub><code>Executer</code>与<code>Service</code>在于 <code>Service</code>可以拥有独立的规范函数 <code>Executer</code> 则具有集体特性 —Sp!ke</sub>]</p>
</li>
<li><p><code>Templater</code>  $\color{CornflowerBlue}{后缀}$ 模板</p>
</li>
<li><p><code>Converter</code>  $\color{CornflowerBlue}{后缀}$ 转换器</p>
</li>
<li><p><code>Connector</code>  $\color{CornflowerBlue}{后缀}$ 连接器</p>
</li>
<li><p><code>Recorder</code>  $\color{CornflowerBlue}{后缀}$ 记录器</p>
</li>
<li><p><code>Monitor</code>  $\color{CornflowerBlue}{后缀}$ 监控器</p>
</li>
<li><p><code>Server</code>  $\color{CornflowerBlue}{后缀}$ 服务器 注意<code>Server</code>代表一个大型的容器概念 , <code>Service</code>代表某个具体的业务</p>
</li>
<li><p><code>Client</code>  $\color{CornflowerBlue}{后缀}$ 终端类</p>
</li>
</ol>
<hr>
<p><code>er</code> <code>or</code> 尾缀代表执行者关系类似 <code>TaskPool</code> <code>Tasker</code>或者<code>ExecutorGroup</code> <code>Executor</code><br>[<sub>更多的命名可以参考设计模式名称, 核心是见词知意 —Sp!ke</sub>]<br>(<code>Singleton</code> <code>Prototype</code> <code>Adapter</code> <code>Bridge</code> <code>Decorator</code> <code>Interpreter</code> <code>Command</code> <code>Mediator</code> <code>State</code> <code>Visitor</code> <code>Strategy</code> <code>Memento</code> <code>...</code>)[<sup>7</sup>] (#refer-anchor-7)</p>
<blockquote>
<p>思考: <code>DAO</code> <code>Dao</code>, <code>DTO</code> <code>Dto</code> 模棱两可的命名如何处理?</p>
</blockquote>
<h3 id="1-2-注释"><a href="#1-2-注释" class="headerlink" title="1.2 注释"></a>1.2 注释</h3><p>注释有利于帮助理解代码，如果使用不当，反而会影响代码的简洁性，不利于理解代码。注释在使用上笔者认为需要坚持三个原则：</p>
<ol>
<li>保持代码干净，消除不必要的注释：好的代码本身就是最好的注释，只在必要时通过注释协助理解代码，目的是保持代码的简洁性，增强代码的可读性；</li>
<li>区分注释和JavaDoc：类、域、方法使用JavaDoc，方法内部使用注释；</li>
<li>注释及时更新：注释也是代码的一部分，如果代码发生变更，注释也要跟着改；</li>
</ol>
<p>[<sub>我的理解注释的意义是补全,补全那些我们不能写成有效代码的片段、文字,也有人会指这我问为什么这个类没有一句注释, <code>String userLastName = &quot;zhang&quot;;</code> 需要注释么 —Sp!ke</sub>]</p>
<p>例:<a href="#refer-anchor-2"><sup>2</sup></a> [<sup>3</sup>] (#refer-anchor-3)</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">String unitAbbrev = &quot;μs&quot;;									| 赞，即使没有注释也非常清晰</span><br><span class="line">String unitAbbrev = &quot;\u03bcs&quot;; // &quot;μs&quot;						| 允许，但没有理由要这样做</span><br><span class="line">String unitAbbrev = &quot;\u03bcs&quot;; // Greek letter mu, &quot;s&quot;				| 允许，但这样做显得笨拙还容易出错</span><br><span class="line">String unitAbbrev = &quot;\u03bcs&quot;;								| 很糟，读者根本看不出这是什么</span><br><span class="line">return &#x27;\ufeff&#x27; + content; // byte order mark					| Good，对于非打印字符，使用转义，并在必要时写上注释</span><br></pre></td></tr></table></figure></div>

<h2 id="2-日志"><a href="#2-日志" class="headerlink" title="2 日志"></a>2 日志</h2><blockquote>
<p>不管是使用何种编程语言，日志输出几乎无处不在。总结起来，日志大致有以下几种用途：<br>    * 问题跟踪：通过日志不仅仅包括我们程序的一些bug，也可以在安装配置时，通过日志可以发现问题。<br>    * 状态监控：通过实时分析日志，可以监控系统的运行状态，做到早发现问题，早处理问题。<br>    * 安全审计：审计主要体现在安全方面上，通过日志进行分析，可以发现是否存在非授权的操作。</p>
</blockquote>
<h3 id="2-1-级别"><a href="#2-1-级别" class="headerlink" title="2.1 级别"></a>2.1 级别</h3><ol>
<li><code>fatal</code> - 严重的，造成服务中断的错误；</li>
<li><code>error</code> - 其他错误运行期错误；</li>
<li><code>warn</code> - 警告信息，如程序调用了一个即将作废的接口，接口的不当使用，运行状态不是期望的但仍可继续处理等；</li>
<li><code>info</code> - 有意义的事件信息，如程序启动，关闭事件，收到请求事件等；</li>
<li><code>debug</code> - 调试信息，可记录详细的业务处理到哪一步了，以及当前的变量状态；</li>
<li><code>trace</code> - 更详细的跟踪信息；</li>
</ol>
<h3 id="2-2-基本的Logger编码规范"><a href="#2-2-基本的Logger编码规范" class="headerlink" title="2.2 基本的Logger编码规范"></a>2.2 基本的Logger编码规范</h3><ol>
<li>在一个对象中通常只使用一个<code>Logger</code>对象，Logger应该是<code>static final</code>的，只有在少数需要在构造函数中传递<code>logger</code>的情况下才使用<code>private final</code>。</li>
<li>输出<code>Exceptions</code>的全部<code>Throwable</code>信息，因为<code>logger.error(msg)</code>和<code>logger.error(msg,e.getMessage())</code>这样的日志输出方法会丢失掉最重要的StackTrace信息。</li>
</ol>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">foo</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="comment">// do something</span></span><br><span class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">		logger.error(e.getMessage()); <span class="comment">// 错误</span></span><br><span class="line">		logger.error(<span class="string">&quot;Bad things&quot;</span>, e.getMessage()); <span class="comment">// 错误</span></span><br><span class="line">		logger.error(<span class="string">&quot;Bad things&quot;</span>, e); <span class="comment">// 正确</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ol start="3">
<li>不允许记录日志后又抛出异常，因为这样会多次记录日志，只允许记录一次日志。</li>
</ol>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">foo</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="comment">// do something</span></span><br><span class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">		logger.error(e.getMessage());</span><br><span class="line">		<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Exception</span>(<span class="string">&quot;Bad things&quot;</span>, e);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ol start="4">
<li>不允许出现System print(包括System.out.println和System.error.println)语句。</li>
</ol>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">foo</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="comment">// do something</span></span><br><span class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">		System.out.println(e.getMessage()); <span class="comment">// 错误</span></span><br><span class="line">		logger.error(<span class="string">&quot;Bad things&quot;</span>, e); <span class="comment">// 正确</span></span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ol start="5">
<li>不允许出现printStackTrace。</li>
</ol>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">foo</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="comment">// do something</span></span><br><span class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">		e.printStackTrace(); <span class="comment">// 错误</span></span><br><span class="line">		logger.error(<span class="string">&quot;Bad things&quot;</span>, e); <span class="comment">// 正确</span></span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ol start="6">
<li>日志性能的考虑，如果代码为核心代码，执行频率非常高，则输出日志建议增加判断，尤其是低级别的输出&lt;<code>debug</code>、<code>info</code>、<code>warn</code>&gt;。<br> debug日志太多后可能会影响性能，有一种改进方法是：</li>
</ol>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (logger.isDebugEnabled()) &#123;</span><br><span class="line">	logger.info(<span class="string">&quot;returning content: &quot;</span> + content);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<pre><code>但更好的方法是Slf4j提供的最佳实践:
</code></pre>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">logger.debug(<span class="string">&quot;returning content: &quot;</span> + content);</span><br></pre></td></tr></table></figure></div>

<pre><code>一方面可以减少参数构造的开销，另一方面也不用多写两行代码。
</code></pre>
<ol start="7">
<li>有意义的日志</li>
</ol>
<p>通常情况下在程序日志里记录一些比较有意义的状态数据：程序启动，退出的时间点；程序运行消耗时间；耗时程序的执行进度；重要变量的状态变化。<br>初次之外，在公共的日志里规避打印程序的调试或者提示信息。</p>
<h3 id="2-3-日志的输出"><a href="#2-3-日志的输出" class="headerlink" title="2.3 日志的输出"></a>2.3 日志的输出</h3><h4 id="2-3-1-什么时候输出"><a href="#2-3-1-什么时候输出" class="headerlink" title="2.3.1 什么时候输出"></a>2.3.1 什么时候输出</h4><blockquote>
<p>日志并不是越多越详细就越好。在分析运行日志，查找问题时，我们经常遇到该出现的日志没有，无用的日志一大堆，或者有效的日志被大量无意义的日志信息淹没，查找起来非常困难。那么什么时候输出日志呢？以下列出了一些常见的需要输出日志的情况，而且日志的级别基本都是<code>INFO</code>，至于<code>DEBUG</code>级别日志的使用场景，需要具体情况具体分析，但也是要追求“恰如其分”，不是越多越好。</p>
</blockquote>
<ol>
<li>系统启动参数、环境变量 : 系统启动的参数、配置、环境变量、<code>System.Properties</code>等信息对于软件的正常运行至关重要，这些信息的输出有助于安装配置人员通过日志快速定位问题，所以程序有必要在启动过程中把使用到的关键参数、变量在日志中输出出来。在输出时需要注意，不是一股脑的全部输出，而是将软件运行涉及到的配置信息输出出来。比如，如果软件对jvm的内存参数比较敏感，对最低配置有要求，那么就需要在日志中将<code>-Xms -Xmx -XX:PermSize</code>这几个参数的值输出出来。</li>
<li>异常捕获 : 在捕获异常处输出日志，大家在基本都能做到，唯一需要注意的是怎么输出一个简单明了的日志信息。这在后面的问题问题中有进一步说明。</li>
<li>函数获得期望之外的结果时 : 一个函数，尤其是供外部系统或远程调用的函数，通常都会有一个期望的结果，但如果内部系统或输出参数发生错误时，函数将无法返回期望的正确结果，此时就需要记录日志，日志的基本通常是<code>WARN</code>。需要特别说明的是，这里的期望之外的结果不是说没有返回就不需要记录日志了，也不是说返回<code>false</code>就需要记录日志。比如函数：<code>isXXXXX()</code>，无论返回<code>true</code>、<code>false</code>记录日志都不是必须的，但是如果系统内部无法判断应该返回<code>true</code>还是<code>false</code>时，就需要记录日志，并且日志的级别应该至少是 <code>WARN</code>。</li>
<li>关键操作 : 关键操作的日志一般是INFO级别，如果数量、频度很高，可以考虑使用DEBUG级别。以下是一些关键操作的举例，实际的关键操作肯定不止这么多。</li>
</ol>
<h4 id="2-3-2-输出什么"><a href="#2-3-2-输出什么" class="headerlink" title="2.3.2 输出什么"></a>2.3.2 输出什么</h4><ol>
<li>关键路径 : 日志并不是独立存在的,而是以一片文章阅读方式存在的</li>
<li>关键字段 : <code>UID</code> <code>CID</code> <code>AID</code> <code>RequestID</code> 一个链路上可以通过唯一一个值,即可将整个<code>I/O</code>操作串联起来的<code>Keyword</code>, 	扩展是跨项目、跨工程之间的思考</li>
<li>关键描述 : 时间、地点、人物、事件大家都玩过这个游戏吧</li>
</ol>
<h2 id="3-代码"><a href="#3-代码" class="headerlink" title="3 代码"></a>3 代码</h2><blockquote>
<p>代码! 代码! 代码!</p>
</blockquote>
<blockquote>
<p>Error&#x3D;more code^2</p>
</blockquote>
<h2 id="4-如何优化"><a href="#4-如何优化" class="headerlink" title="4 如何优化"></a>4 如何优化</h2><h2 id="5-如何思考"><a href="#5-如何思考" class="headerlink" title="5 如何思考"></a>5 如何思考</h2><h2 id="6-如何避免陷入-牛角尖、瓶颈、自大、自卑、思维僵化"><a href="#6-如何避免陷入-牛角尖、瓶颈、自大、自卑、思维僵化" class="headerlink" title="6 如何避免陷入(牛角尖、瓶颈、自大、自卑、思维僵化)"></a>6 如何避免陷入(牛角尖、瓶颈、自大、自卑、思维僵化)</h2><video id="video" controls="" loop="loop" autoplay="autoplay" src="/images/2021-04-23-0.mp4" />


<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><div id="refer-anchor-1"></div>

<ul>
<li>[1] <a class="link"   href="https://zhuanlan.zhihu.com/p/104253155" >浅谈Java编码规范 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<div id="refer-anchor-2"></div>

<ul>
<li>[2] <a class="link"   href="https://www.cnblogs.com/lanxuezaipiao/p/3534447.html" >Google Java编程风格指南中文版 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<div id="refer-anchor-3"></div>

<ul>
<li>[3] <a class="link"   href="https://google.github.io/styleguide/javaguide.html" >Google Java Style Guide <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<div id="refer-anchor-4"></div>

<ul>
<li>[4] <a class="link"   href="https://www.cnblogs.com/qianjinyan/p/10341710.html" >实体entity、JavaBean、Model、POJO、domain的区别 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<div id="refer-anchor-5"></div>

<ul>
<li>[5] <a class="link"   href="https://www.cnblogs.com/huangwentian/p/10526917.html" >浅析VO、DTO、DO、PO的概念、区别和用处 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<div id="refer-anchor-6"></div>

<ul>
<li>[6] <a class="link"   href="http://www.jizhuomi.com/software/402.html" >设计模式与追妹子(23种设计模式巧妙解析，趣味理解) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<div id="refer-anchor-7"></div>

<ul>
<li>[7] <a class="link"   href="https://www.runoob.com/design-pattern/design-pattern-tutorial.html" >设计模式|菜鸟教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<div id="refer-anchor-8"></div>

<ul>
<li>[8] [阿里巴巴开发手册]</li>
</ul>
<div id="refer-anchor-9"></div>

<ul>
<li>[9] <a class="link"   href="https://my.oschina.net/xiaominmin/blog/1599733" >java Log日志规范 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<div id="refer-anchor-10"></div>

<ul>
<li>[10] <a class="link"   href="https://blog.csdn.net/Farrell_zeng/article/details/99303649" >log日志输出规范 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 下JDK安装</title>
    <url>/2017/02/21/Linux-%E4%B8%8BJDK%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<blockquote>
<p>注意：如果系统中存在JDK 或者 OpenJDK，先卸载。</p>
</blockquote>
<h3 id="第一步-下载JDK后解压"><a href="#第一步-下载JDK后解压" class="headerlink" title="第一步 下载JDK后解压"></a>第一步 下载JDK后解压</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf jdk-*u**-linux-x64.tar.gz  -C /dir</span><br></pre></td></tr></table></figure></div>

<h3 id="第二步-设置JAVA环境变量"><a href="#第二步-设置JAVA环境变量" class="headerlink" title="第二步 设置JAVA环境变量"></a>第二步 设置JAVA环境变量</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">vim /root/.bash_profile</span><br></pre></td></tr></table></figure></div>

<p>编辑文件，添加一下内容</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">JAVA_HOME=/usr/local/src/jdk1.*.*_**</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME</span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> PATH</span><br><span class="line">CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib</span><br><span class="line"><span class="built_in">export</span> CLASSPATH</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/profile</span><br></pre></td></tr></table></figure></div>

<p>编辑相同内容</p>
<h3 id="第三步-使环境变量生效"><a href="#第三步-使环境变量生效" class="headerlink" title="第三步 使环境变量生效"></a>第三步 使环境变量生效</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /root/.bash_profile</span><br></pre></td></tr></table></figure></div>

<h3 id="第四部-验证JAVA环境"><a href="#第四部-验证JAVA环境" class="headerlink" title="第四部 验证JAVA环境"></a>第四部 验证JAVA环境</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">java –version</span><br></pre></td></tr></table></figure></div>]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 下Tomcat安装</title>
    <url>/2017/02/26/Linux-%E4%B8%8BTomcat%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h3 id="第一步-下载tomcat"><a href="#第一步-下载tomcat" class="headerlink" title="第一步 下载tomcat"></a>第一步 下载tomcat</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://apache.fayea.com/tomcat/tomcat-*/v*.*.**/bin/apache-tomcat-*.*.**.tar.gz</span><br></pre></td></tr></table></figure></div>
<p> 或者在本地下载好tomcat安装包</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_02_26_01.jpg"
                     
                ></p>
<h3 id="第二步-将tomcat移动放置到-usr-local-目录下"><a href="#第二步-将tomcat移动放置到-usr-local-目录下" class="headerlink" title="第二步 将tomcat移动放置到 &#x2F;usr&#x2F;local&#x2F; 目录下"></a>第二步 将tomcat移动放置到 &#x2F;usr&#x2F;local&#x2F; 目录下</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> apache-tomcat-*.*.**.tar.gz /usr/local/</span><br></pre></td></tr></table></figure></div>
<h3 id="第三步-将tomcat解压缩"><a href="#第三步-将tomcat解压缩" class="headerlink" title="第三步 将tomcat解压缩"></a>第三步 将tomcat解压缩</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xvzf /usr/local/apache-tomcat-*.*.**.tar.gz</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_02_26_02.jpg"
                     
                ></p>
<h3 id="第四步-设置tomcat开机自启动，"><a href="#第四步-设置tomcat开机自启动，" class="headerlink" title="第四步 设置tomcat开机自启动，"></a>第四步 设置tomcat开机自启动，</h3><p>编辑&#x2F;usr&#x2F;local&#x2F;apache-tomcat-<em>.</em>.**.tar.gz&#x2F;bin&#x2F;startup.sh</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">vi /usr/local/apache-tomcat-*.*.**/bin/startup.sh</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_02_26_03.jpg"
                     
                ></p>
<p>添加</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#chkconfig: 2345 80 90</span></span><br><span class="line"><span class="comment">#description:tomcat auto start</span></span><br><span class="line"><span class="comment">#processname: tomcat</span></span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_02_26_04.jpg"
                     
                ></p>
<p>编辑&#x2F;usr&#x2F;local&#x2F;apache-tomcat-<em>.</em>.**&#x2F;bin&#x2F;catalina.sh</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">vi /usr/local/apache-tomcat-*.*.**/bin/catalina.sh</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_02_26_05.jpg"
                     
                ></p>
<p>搜索export关键字，加入如下行：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> CATALINA_BASE=/usr/local/apache-tomcat-*.*.**</span><br><span class="line"><span class="built_in">export</span> CATALINA_HOME=/usr/local/apache-tomcat-*.*.**</span><br><span class="line"><span class="built_in">export</span> CATALINA_TMPDIR=/usr/local/apache-tomcat-*.*.**</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_02_26_06.jpg"
                     
                ></p>
<p>将tomcat加入开机自启动</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_02_26_07.jpg"
                     
                ></p>
<p>加入如下内容：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/local/jdk*.*.*_**</span><br><span class="line">/usr/local/apache-tomcat-*.*.**/bin/startup.sh start</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_02_26_08.jpg"
                     
                ></p>
<h3 id="第五步-测试Tomcat运行"><a href="#第五步-测试Tomcat运行" class="headerlink" title="第五步 测试Tomcat运行"></a>第五步 测试Tomcat运行</h3><p>执行</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/local/apache-tomcat-*.*.**/bin/startup.sh </span><br></pre></td></tr></table></figure></div>

<p>启动tomcat</p>
<p>打开浏览器测试：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_02_26_09.jpg"
                     
                > </p>
<p>执行</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/local/apache-tomcat-*.*.**/bin/shutdown.sh </span><br></pre></td></tr></table></figure></div>

<p>关闭tomcat</p>
<h3 id="第六步-修改端口"><a href="#第六步-修改端口" class="headerlink" title="第六步 修改端口"></a>第六步 修改端口</h3><p>tomcat默认监听8080端口，如果要修改成为80端口，按如下步骤修改：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">vi /usr/local/apache-tomcat-*.*.**/conf/server.xml</span><br></pre></td></tr></table></figure></div>

<p>将</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span> <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span> <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">executor</span>=<span class="string">&quot;tomcatThreadPool&quot;</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span> <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span> <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>修改为：</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;80&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span> <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span> <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">executor</span>=<span class="string">&quot;tomcatThreadPool&quot;</span> <span class="attr">port</span>=<span class="string">&quot;80&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span> <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span> <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_02_26_10.jpg"
                     
                ></p>
<p>重启tomcat生效。</p>
<p>测试Tomcat：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_02_26_11.jpg"
                     
                ></p>
<p>tomcat安装完毕。</p>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 下文件操作</title>
    <url>/2017/02/21/Linux-%E4%B8%8B%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h3 id="linux下文件操作命令为："><a href="#linux下文件操作命令为：" class="headerlink" title="linux下文件操作命令为："></a>linux下文件操作命令为：</h3><table>
<thead>
<tr>
<th align="center">操作</th>
<th align="center">命令</th>
</tr>
</thead>
<tbody><tr>
<td align="center">复制</td>
<td align="center">cp</td>
</tr>
<tr>
<td align="center">移动</td>
<td align="center">mv</td>
</tr>
<tr>
<td align="center">删除</td>
<td align="center">rm</td>
</tr>
</tbody></table>
<h3 id="复制命令"><a href="#复制命令" class="headerlink" title="复制命令"></a>复制命令</h3><blockquote>
<p>   命令格式：cp [-adfilprsu] 源文件(source) 目标文件(destination)<br>                     cp [option] source1 source2 source3 …  directory</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">参数</th>
<th align="center">解释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">-a</td>
<td align="center">是指archive的意思，也说是指复制所有的目录</td>
</tr>
<tr>
<td align="center">-d</td>
<td align="center">若源文件为连接文件(link file)，则复制连接文件属性而非文件本身</td>
</tr>
<tr>
<td align="center">-f</td>
<td align="center">强制(force)，若有重复或其它疑问时，不会询问用户，而强制复制</td>
</tr>
<tr>
<td align="center">-i</td>
<td align="center">若目标文件(destination)已存在，在覆盖时会先询问是否真的操作</td>
</tr>
<tr>
<td align="center">-l</td>
<td align="center">建立硬连接(hard link)的连接文件，而非复制文件本身</td>
</tr>
<tr>
<td align="center">-p</td>
<td align="center">与文件的属性一起复制，而非使用默认属性</td>
</tr>
<tr>
<td align="center">-r</td>
<td align="center">递归复制，用于目录的复制操作</td>
</tr>
<tr>
<td align="center">-s</td>
<td align="center">复制成符号连接文件(symbolic link)，即“快捷方式”文件</td>
</tr>
<tr>
<td align="center">-u</td>
<td align="center">若目标文件比源文件旧，更新目标文件</td>
</tr>
</tbody></table>
<pre><code>如将/test1目录下的file1复制到/test3目录，并将文件名改为file2,可输入以下命令：
cp /test1/file1 /test3/file2
</code></pre>
<h3 id="移动命令"><a href="#移动命令" class="headerlink" title="移动命令"></a>移动命令</h3><blockquote>
<p>命令格式：mv [-fiv] source destination</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">参数</th>
<th align="center">解释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">-f</td>
<td align="center">force，强制直接移动而不询问</td>
</tr>
<tr>
<td align="center">-i</td>
<td align="center">若目标文件(destination)已经存在，就会询问是否覆盖</td>
</tr>
<tr>
<td align="center">-u</td>
<td align="center">若目标文件已经存在，且源文件比较新，才会更新</td>
</tr>
</tbody></table>
<pre><code>如将/test1目录下的file1复制到/test3 目录，并将文件名改为file2,可输入以下命令：
mv /test1/file1 /test3/file2
</code></pre>
<h3 id="删除命令"><a href="#删除命令" class="headerlink" title="删除命令"></a>删除命令</h3><blockquote>
<p>命令格式：rm [fir] 文件或目录</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">参数</th>
<th align="center">解释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">-f</td>
<td align="center">强制删除</td>
</tr>
<tr>
<td align="center">-i</td>
<td align="center">交互模式，在删除前询问用户是否操作</td>
</tr>
<tr>
<td align="center">-r</td>
<td align="center">递归删除，常用在目录的删除</td>
</tr>
</tbody></table>
<pre><code>如删除/test目录下的file1文件，可以输入以下命令：
rm -i /test/file1
</code></pre>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 下zip压缩操作</title>
    <url>/2017/02/22/Linux-%E4%B8%8Bzip%E5%8E%8B%E7%BC%A9%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<p>###linux下zip压缩与解压命令为：</p>
<table>
<thead>
<tr>
<th align="center">操作</th>
<th align="center">命令</th>
</tr>
</thead>
<tbody><tr>
<td align="center">压缩</td>
<td align="center">zip</td>
</tr>
<tr>
<td align="center">解压</td>
<td align="center">unzip</td>
</tr>
</tbody></table>
<h3 id="压缩命令"><a href="#压缩命令" class="headerlink" title="压缩命令"></a>压缩命令</h3><blockquote>
<p>命令格式:zip [参数] [压缩后的文件名] [压缩的目录路径]</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">参数</th>
<th align="center">解释</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><strong>-a</strong></td>
<td align="center">将文件转成ASCII模式</td>
</tr>
<tr>
<td align="center"><strong>-F</strong></td>
<td align="center">尝试修复损坏的压缩文件</td>
</tr>
<tr>
<td align="center"><strong>-h</strong></td>
<td align="center">显示帮助界面</td>
</tr>
<tr>
<td align="center"><strong>-m</strong></td>
<td align="center">将文件压缩之后，删除源文件</td>
</tr>
<tr>
<td align="center"><strong>-n</strong></td>
<td align="center">特定字符串 不压缩具有特定字尾字符串的文件</td>
</tr>
<tr>
<td align="center"><strong>-o</strong></td>
<td align="center">将压缩文件内的所有文件的最新变动时间设为压缩时候的时间</td>
</tr>
<tr>
<td align="center"><strong>-q</strong></td>
<td align="center">安静模式，在压缩的时候不显示指令的执行过程</td>
</tr>
<tr>
<td align="center"><strong>-r</strong></td>
<td align="center">将指定的目录下的所有子目录以及文件一起处理</td>
</tr>
<tr>
<td align="center"><strong>-S</strong></td>
<td align="center">包含系统文件和隐含文件（S是大写）</td>
</tr>
<tr>
<td align="center"><strong>-t</strong></td>
<td align="center">日期 把压缩文件的最后修改日期设为指定的日期，日期格式为mmddyyyy</td>
</tr>
</tbody></table>
<h3 id="解压命令"><a href="#解压命令" class="headerlink" title="解压命令"></a>解压命令</h3><blockquote>
<p>命令格式:unzip [参数] [需要解压的文件名]</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">参数</th>
<th align="center">解释</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><strong>-l</strong></td>
<td align="center">列出压缩文件所包含的内容</td>
</tr>
<tr>
<td align="center"><strong>-v</strong></td>
<td align="center">显示详细的执行过程</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>MarkDown 支持的语言</title>
    <url>/2017/02/27/MarkDown-%E6%94%AF%E6%8C%81%E7%9A%84%E8%AF%AD%E8%A8%80/</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th align="center">名称</th>
<th align="center">关键字</th>
</tr>
</thead>
<tbody><tr>
<td align="center">AppleScript</td>
<td align="center">applescript</td>
</tr>
<tr>
<td align="center">ActionScript 3.0</td>
<td align="center">actionscript3 , as3</td>
</tr>
<tr>
<td align="center">Shell</td>
<td align="center">bash , shell</td>
</tr>
<tr>
<td align="center">ColdFusion</td>
<td align="center">coldfusion , cf</td>
</tr>
<tr>
<td align="center">C</td>
<td align="center">cpp , c</td>
</tr>
<tr>
<td align="center">C#</td>
<td align="center">c# , c-sharp , csharp</td>
</tr>
<tr>
<td align="center">CSS</td>
<td align="center">css</td>
</tr>
<tr>
<td align="center">Delphi</td>
<td align="center">delphi , pascal , pas</td>
</tr>
<tr>
<td align="center">diff&amp;patch</td>
<td align="center">diff patch</td>
</tr>
<tr>
<td align="center">Erlang</td>
<td align="center">erl , erlang</td>
</tr>
<tr>
<td align="center">Groovy</td>
<td align="center">groovy</td>
</tr>
<tr>
<td align="center">Java</td>
<td align="center">java</td>
</tr>
<tr>
<td align="center">JavaFX</td>
<td align="center">jfx , javafx</td>
</tr>
<tr>
<td align="center">JavaScript</td>
<td align="center">js , jscript , javascript</td>
</tr>
<tr>
<td align="center">Perl</td>
<td align="center">perl , pl , Perl</td>
</tr>
<tr>
<td align="center">PHP</td>
<td align="center">php</td>
</tr>
<tr>
<td align="center">text</td>
<td align="center">text , plain</td>
</tr>
<tr>
<td align="center">Python</td>
<td align="center">py , python</td>
</tr>
<tr>
<td align="center">Ruby</td>
<td align="center">ruby , rails , ror , rb</td>
</tr>
<tr>
<td align="center">SASS&amp;SCSS</td>
<td align="center">sass , scss</td>
</tr>
<tr>
<td align="center">Scala</td>
<td align="center">scala</td>
</tr>
<tr>
<td align="center">SQL</td>
<td align="center">sql</td>
</tr>
<tr>
<td align="center">Visual</td>
<td align="center">Basic	vb , vbnet</td>
</tr>
<tr>
<td align="center">XML</td>
<td align="center">xml , xhtml , xslt , html</td>
</tr>
<tr>
<td align="center">Objective C</td>
<td align="center">objc , obj-c</td>
</tr>
<tr>
<td align="center">F#</td>
<td align="center">f# f-sharp , fsharp</td>
</tr>
<tr>
<td align="center">R</td>
<td align="center">r , s , splus</td>
</tr>
<tr>
<td align="center">matlab</td>
<td align="center">matlab</td>
</tr>
<tr>
<td align="center">swift</td>
<td align="center">swift</td>
</tr>
<tr>
<td align="center">GO</td>
<td align="center">go , golang</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>MarkDown</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 下MySQL安装</title>
    <url>/2017/02/27/Linux-%E4%B8%8BMySQL%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<blockquote>
<p>注意：如果安装失败，可尝试关闭selinux和防火墙再行测试。</p>
</blockquote>
<h3 id="安装MySQL前准备"><a href="#安装MySQL前准备" class="headerlink" title="安装MySQL前准备"></a>安装MySQL前准备</h3><h5 id="第一步：安装编译源码所需的工具和库"><a href="#第一步：安装编译源码所需的工具和库" class="headerlink" title="第一步：安装编译源码所需的工具和库"></a>第一步：安装编译源码所需的工具和库</h5><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">yum install gcc gcc-c++ ncurses-devel perl </span><br></pre></td></tr></table></figure></div>

<h5 id="第二步：mysql-5-6版本之后需要cmake-安装cmake"><a href="#第二步：mysql-5-6版本之后需要cmake-安装cmake" class="headerlink" title="第二步：mysql 5.6版本之后需要cmake,安装cmake"></a>第二步：mysql 5.6版本之后需要cmake,安装cmake</h5><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://www.cmake.org/files/v2.8/cmake-2.8.10.2.tar.gz   </span><br><span class="line">tar -xzvf cmake-2.8.10.2.tar.gz   </span><br><span class="line"><span class="built_in">cd</span> cmake-2.8.10.2   </span><br><span class="line">./bootstrap ; make ; make install   </span><br></pre></td></tr></table></figure></div>

<h3 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h3><h5 id="第一步：新建mysql用户和mysql组"><a href="#第一步：新建mysql用户和mysql组" class="headerlink" title="第一步：新建mysql用户和mysql组"></a>第一步：新建mysql用户和mysql组</h5><p>新增mysql用户组 </p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">groupadd mysql </span><br></pre></td></tr></table></figure></div>

<p>新增mysql用户 </p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">useradd -r -g mysql mysql </span><br></pre></td></tr></table></figure></div>

<p> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_02_27_1.jpg"
                     
                ></p>
<h5 id="第二步：新建MySQL所需要的目录"><a href="#第二步：新建MySQL所需要的目录" class="headerlink" title="第二步：新建MySQL所需要的目录"></a>第二步：新建MySQL所需要的目录</h5><p>新建mysql安装目录 </p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -pv  /usr/local/mysql</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>建立mysql的安装目录，建议先创建目录<br>若不建立可能在编译安装的时候报no such irectory</p>
</blockquote>
<p>新建mysql数据库数据文件目录</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /data/mysqldb  </span><br></pre></td></tr></table></figure></div>

<p>指定mysql的数据文件的目录，建议编译安装前先创建此目录</p>
<h5 id="第三步：下载MySQL并解压"><a href="#第三步：下载MySQL并解压" class="headerlink" title="第三步：下载MySQL并解压"></a>第三步：下载MySQL并解压</h5><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.24.tar.gz</span><br><span class="line">tar -zxvf mysql-5.6.14.tar.gz</span><br></pre></td></tr></table></figure></div>

<h5 id="第四步：安装MySQL"><a href="#第四步：安装MySQL" class="headerlink" title="第四步：安装MySQL"></a>第四步：安装MySQL</h5><p>切换到 mysql-5.6.24  </p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> mysql-5.6.24</span><br></pre></td></tr></table></figure></div>

<p>编译mysql，执行如下命令：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">cmake \</span><br><span class="line">-DCMAKE_INSTALL_PREFIX=/usr/local/mysql \</span><br><span class="line">-DMYSQL_DATADIR=/usr/local/mysql/data \</span><br><span class="line">-DSYSCONFDIR=/etc \</span><br><span class="line">-DWITH_MYISAM_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_MEMORY_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_READLINE=1 \</span><br><span class="line">-DMYSQL_UNIX_ADDR=/var/lib/mysql/mysql.sock \</span><br><span class="line">-DMYSQL_TCP_PORT=3306 \</span><br><span class="line">-DENABLED_LOCAL_INFILE=1 \</span><br><span class="line">-DWITH_PARTITION_STORAGE_ENGINE=1 \</span><br><span class="line">-DEXTRA_CHARSETS=all \</span><br><span class="line">-DDEFAULT_CHARSET=utf8 \</span><br><span class="line">-DDEFAULT_COLLATION=utf8_general_ci</span><br></pre></td></tr></table></figure></div>

<p>接着使用 make &amp;&amp; make install 来编译并安装</p>
<p>安装完毕的截图如下</p>
<p> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_02_27_2.jpg"
                     
                > </p>
<h3 id="安装MySQL后设置"><a href="#安装MySQL后设置" class="headerlink" title="安装MySQL后设置"></a>安装MySQL后设置</h3><h5 id="第一步：修改mysql目录属组"><a href="#第一步：修改mysql目录属组" class="headerlink" title="第一步：修改mysql目录属组"></a>第一步：修改mysql目录属组</h5><p>修改mysql安装目录</p>
<blockquote>
<p>若不修改默认的是root用户root组，启动会报错<br>（Starting MySQL..The server quit without updating PID file [FAILED]&#x2F;mysql&#x2F;Server03.mylinux.com.pid）</p>
</blockquote>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/mysql   </span><br><span class="line"><span class="built_in">chown</span> -R mysql:mysql . </span><br></pre></td></tr></table></figure></div>

<p>修改mysql数据库文件目录</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /data/mysqldb  </span><br><span class="line"><span class="built_in">chown</span> -R mysql:mysql .  </span><br></pre></td></tr></table></figure></div>

<h5 id="第二步：初始化mysql数据库"><a href="#第二步：初始化mysql数据库" class="headerlink" title="第二步：初始化mysql数据库"></a>第二步：初始化mysql数据库</h5><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/mysql   </span><br></pre></td></tr></table></figure></div>

<p>以mysql的身份初始化</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">scripts/mysql_install_db --user=mysql --datadir=/data/mysqldb </span><br></pre></td></tr></table></figure></div>

<h5 id="第三步：复制mysql服务启动配置文件"><a href="#第三步：复制mysql服务启动配置文件" class="headerlink" title="第三步：复制mysql服务启动配置文件"></a>第三步：复制mysql服务启动配置文件</h5><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> /usr/local/mysql/support-files/my-default.cnf /etc/my.cnf  </span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>注：如果&#x2F;etc&#x2F;my.cnf文件存在，则覆盖。</p>
</blockquote>
<h5 id="第四步：复制mysql服务启动脚本及加入PATH路径"><a href="#第四步：复制mysql服务启动脚本及加入PATH路径" class="headerlink" title="第四步：复制mysql服务启动脚本及加入PATH路径"></a>第四步：复制mysql服务启动脚本及加入PATH路径</h5><blockquote>
<p>（不用每次都要到安装目录执行mysql）</p>
</blockquote>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> support-files/mysql.server /etc/init.d/mysqld     </span><br><span class="line">vim /etc/profile   </span><br><span class="line">PATH=/usr/local/mysql/bin:/usr/local/mysql/lib:<span class="variable">$PATH</span>  </span><br><span class="line"><span class="built_in">export</span> PATH  </span><br><span class="line"><span class="built_in">source</span> /etc/profile    </span><br></pre></td></tr></table></figure></div>

<h5 id="第五步：-启动mysql服务并加入开机自启动-可选这个步骤，以后可以自己启动的"><a href="#第五步：-启动mysql服务并加入开机自启动-可选这个步骤，以后可以自己启动的" class="headerlink" title="第五步： 启动mysql服务并加入开机自启动(可选这个步骤，以后可以自己启动的)"></a>第五步： 启动mysql服务并加入开机自启动(可选这个步骤，以后可以自己启动的)</h5><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">service mysqld start </span><br><span class="line">chkconfig --level 35 mysqld on</span><br></pre></td></tr></table></figure></div>

<p> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_02_27_3.jpg"
                     
                > </p>
<h5 id="第六步：检查mysql服务是否启动"><a href="#第六步：检查mysql服务是否启动" class="headerlink" title="第六步：检查mysql服务是否启动"></a>第六步：检查mysql服务是否启动</h5><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -tulnp | grep 3306   </span><br></pre></td></tr></table></figure></div>

<p> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_02_27_4.jpg"
                     
                ></p>
<p>到此服务器mysql已经安装并已经启动，接下来修改MySQL用户root的密码，登录测试</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">mysqladmin -u root password <span class="string">&#x27;123456&#x27;</span>  </span><br></pre></td></tr></table></figure></div>

<h5 id="第七步：mysql命令登录测试"><a href="#第七步：mysql命令登录测试" class="headerlink" title="第七步：mysql命令登录测试"></a>第七步：mysql命令登录测试</h5><p> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_02_27_5.jpg"
                     
                > </p>
<p>mysql安装完毕，成功登录</p>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>MarkDown 插入数学公式</title>
    <url>/2017/02/28/MarkDown-%E6%8F%92%E5%85%A5%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</url>
    <content><![CDATA[<h3 id="使用Google-Chart的服务器"><a href="#使用Google-Chart的服务器" class="headerlink" title="使用Google Chart的服务器"></a>使用Google Chart的服务器</h3><blockquote>
<p>提示：若无法正确打开<br>在hosts 文件中添加</p>
</blockquote>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">61.91.161.217	chart.googleapis.com</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://chart.googleapis.com/chart?cht=tx&amp;chl= 在此插入Latex公式&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border:none;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>一个例子，</p>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://chart.googleapis.com/chart?cht=tx&amp;chl=\Large x=\frac&#123;-b\pm\sqrt&#123;b^2-4ac&#125;&#125;&#123;2a&#125;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border:none;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>公式显示结果为：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\Large x=\frac{-b\pm\sqrt{b^2-4ac}}{2a}"
                      style="border:none;"
                >

<h3 id="符号对照表"><a href="#符号对照表" class="headerlink" title="符号对照表"></a>符号对照表</h3><blockquote>
<p>注意：不知什么原因 “+” 无法编译 ，后面 “+” 使用 %2B 代替即可</p>
</blockquote>
<h5 id="如何输入上下标"><a href="#如何输入上下标" class="headerlink" title="如何输入上下标"></a>如何输入上下标</h5><blockquote>
<p>^表示上标, _表示下标。如果上下标的内容多于一个字符，要用{}把这些内容括起来当成一个整体。上下标是可以嵌套的，也可以同时使用。</p>
</blockquote>
<p>例子：x^{y^z}&#x3D;(1+{\rm e}^x)^{-2xy^w}</p>
<p>显示：<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=x^{y^z}=(1%2B{\rm e}^x)^{-2xy^w}"
                      style="border:none;"
                ></p>
<h5 id="如何输入括号和分隔符"><a href="#如何输入括号和分隔符" class="headerlink" title="如何输入括号和分隔符"></a>如何输入括号和分隔符</h5><blockquote>
<p>()、[]和|表示自己，{}表示{}。当要显示大号的括号或分隔符时，要用\left和\right命令。</p>
</blockquote>
<p>例子：f(x,y,z) &#x3D; 3y^2z \left( 3+\frac{7x+5}{1+y^2} \right)</p>
<p>显示：<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=f(x,y,z) = 3y^2z \left( 3%2B\frac{7x%2B5}{1%2By^2} \right)"
                      style="border:none;"
                ></p>
<h5 id="如何输入分数"><a href="#如何输入分数" class="headerlink" title="如何输入分数"></a>如何输入分数</h5><p>例子：\frac{1}{3}　或　1 \over 3</p>
<p>显示： <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\frac{1}{3} "
                      style="border:none;"
                > 　或  <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=1 \over 3"
                      style="border:none;"
                ></p>
<h5 id="如何输入开方"><a href="#如何输入开方" class="headerlink" title="如何输入开方"></a>如何输入开方</h5><p>例子：\sqrt{2}　和　\sqrt[n]{3}</p>
<p>显示： <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\sqrt{2}  "
                      style="border:none;"
                >　和　 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\sqrt[n]{3} "
                      style="border:none;"
                ></p>
<h5 id="如何输入省略号"><a href="#如何输入省略号" class="headerlink" title="如何输入省略号"></a>如何输入省略号</h5><blockquote>
<p>数学公式中常见的省略号有两种，\ldots表示与文本底线对齐的省略号，\cdots表示与文本中线对齐的省略号。</p>
</blockquote>
<p>例子：f(x1,x2,\ldots,xn) &#x3D; x1^2 + x2^2 + \cdots + xn^2</p>
<p>显示：<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=f(x<em>1,x</em>2,\ldots,x<em>n) = x</em>1^2 %2B x<em>2^2 %2B \cdots %2B x</em>n^2"
                      style="border:none;"
                ></p>
<h5 id="如何输入矢量"><a href="#如何输入矢量" class="headerlink" title="如何输入矢量"></a>如何输入矢量</h5><p>例子：\vec{a} \cdot \vec{b}&#x3D;0</p>
<p>显示：<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\vec{a} \cdot \vec{b}=0"
                      style="border:none;"
                ></p>
<h5 id="如何输入积分"><a href="#如何输入积分" class="headerlink" title="如何输入积分"></a>如何输入积分</h5><p>例子：\int_0^1 x^2 {\rm d}x</p>
<p>显示： <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\int_0^1 x^2 {\rm d}x"
                      style="border:none;"
                ></p>
<h5 id="如何输入极限运算"><a href="#如何输入极限运算" class="headerlink" title="如何输入极限运算"></a>如何输入极限运算</h5><p>例子：\lim_{n \rightarrow +\infty} \frac{1}{n(n+1)}</p>
<p>显示： <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\lim_{n \rightarrow %2B\infty} \frac{1}{n(n%2B1)}"
                      style="border:none;"
                ></p>
<h5 id="如何输入累加、累乘运算"><a href="#如何输入累加、累乘运算" class="headerlink" title="如何输入累加、累乘运算"></a>如何输入累加、累乘运算</h5><p>例子：\sum{i&#x3D;0}^n \frac{1}{i^2}　和　\prod{i&#x3D;0}^n \frac{1}{i^2}</p>
<p>显示： <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\sum{i=0}^n \frac{1}{i^2}"
                      style="border:none;"
                > 　和　 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\prod{i=0}^n \frac{1}{i^2}"
                      style="border:none;"
                ></p>
<h5 id="如何输入希腊字母"><a href="#如何输入希腊字母" class="headerlink" title="如何输入希腊字母"></a>如何输入希腊字母</h5><table>
<thead>
<tr>
<th align="center">符号</th>
<th align="center">值</th>
<th align="center">符号</th>
<th align="center">值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">\alpha</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\alpha"
                      style="border:none;"
                ></td>
<td align="center">\beta</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\beta"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\gamma</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\gamma"
                      style="border:none;"
                ></td>
<td align="center">\delta</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\delta"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\epsilon</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\epsilon"
                      style="border:none;"
                ></td>
<td align="center">\varepsilon</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\varepsilon"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\zeta</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\zeta"
                      style="border:none;"
                ></td>
<td align="center">\eta</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\eta"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\theta</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\theta"
                      style="border:none;"
                ></td>
<td align="center">\vartheta</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\vartheta"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\iota</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\iota"
                      style="border:none;"
                ></td>
<td align="center">\kappa</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\kappa"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\lambda</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\lambda"
                      style="border:none;"
                ></td>
<td align="center">\mu</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\mu"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\nu</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\nu"
                      style="border:none;"
                ></td>
<td align="center">\xi</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\xi"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\pi</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\pi"
                      style="border:none;"
                ></td>
<td align="center">\varpi</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\varpi"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\rho</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\rho"
                      style="border:none;"
                ></td>
<td align="center">\varrho</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\varrho"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\sigma</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\sigma"
                      style="border:none;"
                ></td>
<td align="center">\varsigma</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\varsigma"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\tau</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\tau"
                      style="border:none;"
                ></td>
<td align="center">\upsilon</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\upsilon"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\phi</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\phi"
                      style="border:none;"
                ></td>
<td align="center">\varphi</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\varphi"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\chi</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\chi"
                      style="border:none;"
                ></td>
<td align="center">\psi</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\psi"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\omega</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\omega"
                      style="border:none;"
                ></td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<h5 id="如何输入其它特殊字符"><a href="#如何输入其它特殊字符" class="headerlink" title="如何输入其它特殊字符"></a>如何输入其它特殊字符</h5><p>关系运算符</p>
<table>
<thead>
<tr>
<th align="center">符号</th>
<th align="center">值</th>
<th align="center">符号</th>
<th align="center">值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">\pm</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\pm"
                      style="border:none;"
                ></td>
<td align="center">\times</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\times"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\div</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\div"
                      style="border:none;"
                ></td>
<td align="center">\mid</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\mid"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\nmid</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\nmid"
                      style="border:none;"
                ></td>
<td align="center">\cdot</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\cdot"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\circ</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\circ"
                      style="border:none;"
                ></td>
<td align="center">\ast</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\ast"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\bigodot</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\bigodot"
                      style="border:none;"
                ></td>
<td align="center">\bigotimes</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\bigotimes"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\bigoplus</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\bigoplus"
                      style="border:none;"
                ></td>
<td align="center">\leq</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\leq"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\geq</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\geq"
                      style="border:none;"
                ></td>
<td align="center">\neq</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\neq"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\approx</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\approx"
                      style="border:none;"
                ></td>
<td align="center">\equiv</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\equiv"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\sum</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\sum"
                      style="border:none;"
                ></td>
<td align="center">\prod</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\prod"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\coprod</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\coprod"
                      style="border:none;"
                ></td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<p>集合运算符</p>
<table>
<thead>
<tr>
<th align="center">符号</th>
<th align="center">值</th>
<th align="center">符号</th>
<th align="center">值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">\emptyset</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\emptyset"
                      style="border:none;"
                ></td>
<td align="center">\in</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\in"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\notin</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\notin"
                      style="border:none;"
                ></td>
<td align="center">\subset</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\subset"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\supset</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\supset"
                      style="border:none;"
                ></td>
<td align="center">\subseteq</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\subseteq"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\supseteq</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\supseteq"
                      style="border:none;"
                ></td>
<td align="center">\bigcap</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\bigcap"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\bigcup</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\bigcup"
                      style="border:none;"
                ></td>
<td align="center">\bigvee</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\bigvee"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\bigwedge</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\bigwedge"
                      style="border:none;"
                ></td>
<td align="center">\biguplus</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\biguplus"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\bigsqcup</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\bigsqcup"
                      style="border:none;"
                ></td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<p>对数运算符</p>
<table>
<thead>
<tr>
<th align="center">符号</th>
<th align="center">值</th>
<th align="center">符号</th>
<th align="center">值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">\log</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\log"
                      style="border:none;"
                ></td>
<td align="center">\lg</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\lg"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\ln</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\ln"
                      style="border:none;"
                ></td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<p>三角运算符</p>
<table>
<thead>
<tr>
<th align="center">符号</th>
<th align="center">值</th>
<th align="center">符号</th>
<th align="center">值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">\bot</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\bot"
                      style="border:none;"
                ></td>
<td align="center">\angle</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\angle"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">30^\circ</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=30^\circ"
                      style="border:none;"
                ></td>
<td align="center">\sin</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\sin"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\cos</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\cos"
                      style="border:none;"
                ></td>
<td align="center">\tan</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\tan"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\cot</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\cot"
                      style="border:none;"
                ></td>
<td align="center">\sec</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\sec"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\csc</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\csc"
                      style="border:none;"
                ></td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<p>微积分运算符</p>
<table>
<thead>
<tr>
<th align="center">符号</th>
<th align="center">值</th>
<th align="center">符号</th>
<th align="center">值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">\prime</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\prime"
                      style="border:none;"
                ></td>
<td align="center">\int</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\int"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\iint</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\iint"
                      style="border:none;"
                ></td>
<td align="center">\iiint</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\iiint"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\iiiint</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\iiiint"
                      style="border:none;"
                ></td>
<td align="center">\oint</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\oint"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\lim</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\lim"
                      style="border:none;"
                ></td>
<td align="center">\infty</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\infty"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\nabla</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\nabla"
                      style="border:none;"
                ></td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<p>逻辑运算符</p>
<table>
<thead>
<tr>
<th align="center">符号</th>
<th align="center">值</th>
<th align="center">符号</th>
<th align="center">值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">\because</td>
<td align="center"><strong>未找到</strong></td>
<td align="center">\therefore</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\therefore"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\forall</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\forall"
                      style="border:none;"
                ></td>
<td align="center">\exists</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\exists"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\not&#x3D;</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\not="
                      style="border:none;"
                ></td>
<td align="center">\not&gt;</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\not>"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\not\subset</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\not\subset"
                      style="border:none;"
                ></td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<p>戴帽符号</p>
<table>
<thead>
<tr>
<th align="center">符号</th>
<th align="center">值</th>
<th align="center">符号</th>
<th align="center">值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">\hat{y}</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\hat{y}"
                      style="border:none;"
                ></td>
<td align="center">\check{y}</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\check{y}"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\breve{y}</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\breve{y}"
                      style="border:none;"
                ></td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<p>连线符号</p>
<table>
<thead>
<tr>
<th align="center">符号</th>
<th align="center">值</th>
<th align="center">符号</th>
<th align="center">值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">\overline{a+b+c+d}</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\overline{a+b+c+d}"
                      style="border:none;"
                ></td>
<td align="center">\underline{a+b+c+d}</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\underline{a+b+c+d}"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\overbrace{a+\underbrace{b+c}<em>{1.0}+d}^{2.0}</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\overbrace{a+\underbrace{b+c}{1.0}+d}^{2.0}"
                      style="border:none;"
                ></td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<p>箭头符号</p>
<table>
<thead>
<tr>
<th align="center">符号</th>
<th align="center">值</th>
<th align="center">符号</th>
<th align="center">值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">\uparrow</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\uparrow"
                      style="border:none;"
                ></td>
<td align="center">\downarrow</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\downarrow"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\Uparrow</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\Uparrow"
                      style="border:none;"
                ></td>
<td align="center">\Downarrow</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\Downarrow"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\rightarrow</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\rightarrow"
                      style="border:none;"
                ></td>
<td align="center">\leftarrow</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\leftarrow"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\Rightarrow</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\Rightarrow"
                      style="border:none;"
                ></td>
<td align="center">\Leftarrow</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\Leftarrow"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\longrightarrow</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\longrightarrow"
                      style="border:none;"
                ></td>
<td align="center">\longleftarrow</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\longleftarrow"
                      style="border:none;"
                ></td>
</tr>
<tr>
<td align="center">\Longrightarrow</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\Longrightarrow"
                      style="border:none;"
                ></td>
<td align="center">\Longleftarrow</td>
<td align="center"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl=\Longleftarrow"
                      style="border:none;"
                ></td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>MarkDown</tag>
        <tag>LaTeX</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven-项目命名</title>
    <url>/2021/04/22/Maven-%E9%A1%B9%E7%9B%AE%E5%91%BD%E5%90%8D/</url>
    <content><![CDATA[<h1 id="Maven项目命名规范"><a href="#Maven项目命名规范" class="headerlink" title="Maven项目命名规范"></a>Maven项目命名规范</h1><blockquote>
<p><code>groupId</code> will identify your project uniquely across all projects, so we need to enforce a naming schema. It has to follow the package name rules, what means that has to be at least as a domain name you control, and you can create as many subgroups as you want. Look at More information about package names.<br>eg. org.apache.maven, org.apache.commons</p>
<p>A good way to determine the granularity of the groupId is to use the project structure. That is, if the current project is a multiple module project, it should append a new identifier to the parent’s groupId.</p>
<p>eg. org.apache.maven, org.apache.maven.plugins, org.apache.maven.reporting</p>
<p><code>artifactId</code> is the name of the jar without version. If you created it then you can choose whatever name you want with lowercase letters and no strange symbols. If it’s a third party jar you have to take the name of the jar as it’s distributed.<br>eg. maven, commons-math</p>
<p><code>version</code> if you distribute it then you can choose any typical version with numbers and dots (1.0, 1.1, 1.0.1, …). Don’t use dates as they are usually associated with SNAPSHOT (nightly) builds. If it’s a third party artifact, you have to use their version number whatever it is, and as strange as it can look.<br>eg. 2.0, 2.0.1, 1.3.1</p>
<p>（<a class="link"   href="https://maven.apache.org/guides/mini/guide-naming-conventions.html%EF%BC%89" >https://maven.apache.org/guides/mini/guide-naming-conventions.html） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<h2 id="groupId"><a href="#groupId" class="headerlink" title="groupId"></a>groupId</h2><p>groupId定义当前Maven项目隶属的实际项目，例如org.sonatype.nexus，此id前半部分org.sonatype代表此项目隶属的组织或公司，后部分代表项目的名称，如果此项目多模块话开发的话就子模块可以分为org.sonatype.nexus.plugins和org.sonatype.nexus.utils等。特别注意的是groupId不应该对应项目隶属的组织或公司，也就是说groupId不能只有org.sonatype而没有nexus。</p>
<p> 例如：我建立一个项目，此项目是此后所有项目的一个总的平台，那么groupId应该是org.limingming.projectName,projectName是平台的名称，org.limingming是代表我个人的组织，如果以我所在的浪潮集团来说的话就应该是com.inspur.loushang。</p>
<h2 id="artifactId"><a href="#artifactId" class="headerlink" title="artifactId"></a>artifactId</h2><p>artifactId是构件ID，该元素定义实际项目中的一个Maven项目或者是子模块，如上面官方约定中所说，构建名称必须小写字母，没有其他的特殊字符，推荐使用“实际项目名称－模块名称”的方式定义，例如：spirng-mvn、spring-core等。</p>
<p>推荐格式：使用实际项目名称作为artifactId的前缀，紧接着为模块名称</p>
<p>例如：<strong>spirng-mvn-2.0.0.jar</strong><br>nexus-indexer、spring-mvc、hibernate-c3po……这些id都是以实际项目名称作为前缀，然后接着一个中划线，再紧跟项目的模块名称，默认情况下maven会在artifactId添加version作为最后生成的名称。</p>
]]></content>
      <tags>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>位运算</title>
    <url>/2017/04/03/%E4%BD%8D%E8%BF%90%E7%AE%97/</url>
    <content><![CDATA[<blockquote>
<p>为什么会存在十六进制并且广泛使用？</p>
</blockquote>
<p>我的理解是十进制描述的是纯数值型，十六进制是标称型+数值型，标称型用于处理状态机。人有十个手指，这可能是十进制最早起源的原因，但是无法表示状态。我们如何记录正负，甚至是虚数、复数。如果不加入额外标识无法表示吧，那机器呢，他可是只能运算二进制信号，所以最合适的描述载体有两个必要条件：</p>
<ol>
<li>二的直系等比倍数；</li>
<li>大于十并且越小越好。</li>
</ol>
<p>那么十六是最合适的选择。</p>
<hr>
<blockquote>
<p>计算机通信的基本原理是将电信号转换为逻辑信号，其转换方式是将高低电频表示为二进制数中的1和0, 再通过不同的二进制序列来表示所有的信息。</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">含义</th>
<th align="center">Pascal语言</th>
<th align="center">C语言</th>
<th align="center">Java</th>
<th align="center">Scala</th>
<th align="center">Python</th>
</tr>
</thead>
<tbody><tr>
<td align="center">按位与</td>
<td align="center">a and b</td>
<td align="center">a &amp; b</td>
<td align="center">a &amp; b</td>
<td align="center">a &amp; b</td>
<td align="center">a &amp; b</td>
</tr>
<tr>
<td align="center">按位或</td>
<td align="center">a or b</td>
<td align="center">a &brvbar; b</td>
<td align="center">a &brvbar; b</td>
<td align="center">a &brvbar; b</td>
<td align="center">a &brvbar; b</td>
</tr>
<tr>
<td align="center">按位异或</td>
<td align="center">a xor b</td>
<td align="center">a ^ b</td>
<td align="center">a ^ b</td>
<td align="center">a ^ b</td>
<td align="center">a ^ b</td>
</tr>
<tr>
<td align="center">按位取反</td>
<td align="center">not a</td>
<td align="center">~a</td>
<td align="center">~a</td>
<td align="center">~a</td>
<td align="center">~a</td>
</tr>
<tr>
<td align="center">左移</td>
<td align="center">a shl b</td>
<td align="center">a &lt;&lt; b</td>
<td align="center">a &lt;&lt; b</td>
<td align="center">a &lt;&lt; b</td>
<td align="center">a &lt;&lt; b</td>
</tr>
<tr>
<td align="center">带符号右移</td>
<td align="center">a shr b</td>
<td align="center">a &gt;&gt; b</td>
<td align="center">a &gt;&gt; b</td>
<td align="center">a &gt;&gt; b</td>
<td align="center">a &gt;&gt; b</td>
</tr>
<tr>
<td align="center">无符号右移</td>
<td align="center"></td>
<td align="center"></td>
<td align="center">a &gt;&gt;&gt; b</td>
<td align="center">a &gt;&gt;&gt; b</td>
<td align="center">a &gt;&gt;&gt; b</td>
</tr>
</tbody></table>
<h1 id="BIN-OCT-HEX-DEC"><a href="#BIN-OCT-HEX-DEC" class="headerlink" title="BIN_OCT_HEX_DEC"></a>BIN_OCT_HEX_DEC</h1><ul>
<li><p>BIN : binary 二进制</p>
</li>
<li><p>OCT : octal 八进制</p>
</li>
<li><p>DEC : decimal 十进制</p>
</li>
<li><p>HEX : hexadecimal 十六进制</p>
<p>  位运算基于二进制</p>
</li>
</ul>
<h1 id="与-and运算"><a href="#与-and运算" class="headerlink" title="与 and运算 &amp;"></a>与 and运算 &amp;</h1><blockquote>
<p>同位同为1结果为1</p>
</blockquote>
<h3 id="5-3"><a href="#5-3" class="headerlink" title="5 &amp; 3"></a>5 &amp; 3</h3><table>
<thead>
<tr>
<th align="center">标识</th>
<th align="center">DEC</th>
<th align="center">BIN</th>
</tr>
</thead>
<tbody><tr>
<td align="center">数一</td>
<td align="center">5</td>
<td align="center">0101</td>
</tr>
<tr>
<td align="center">数二</td>
<td align="center">3</td>
<td align="center">0011</td>
</tr>
<tr>
<td align="center">结果</td>
<td align="center">1</td>
<td align="center">0001</td>
</tr>
</tbody></table>
<h3 id="4-1"><a href="#4-1" class="headerlink" title="4 &amp; 1"></a>4 &amp; 1</h3><table>
<thead>
<tr>
<th align="center">标识</th>
<th align="center">DEC</th>
<th align="center">BIN</th>
</tr>
</thead>
<tbody><tr>
<td align="center">数一</td>
<td align="center">4</td>
<td align="center">0100</td>
</tr>
<tr>
<td align="center">数二</td>
<td align="center">1</td>
<td align="center">0001</td>
</tr>
<tr>
<td align="center">结果</td>
<td align="center">0</td>
<td align="center">0000</td>
</tr>
</tbody></table>
<h1 id="或-or运算"><a href="#或-or运算" class="headerlink" title="或 or运算 |"></a>或 or运算 |</h1><blockquote>
<p>同位存在1结果为1</p>
</blockquote>
<h3 id="5-3-1"><a href="#5-3-1" class="headerlink" title="5 | 3"></a>5 | 3</h3><table>
<thead>
<tr>
<th align="center">标识</th>
<th align="center">DEC</th>
<th align="center">BIN</th>
</tr>
</thead>
<tbody><tr>
<td align="center">数一</td>
<td align="center">5</td>
<td align="center">0101</td>
</tr>
<tr>
<td align="center">数二</td>
<td align="center">3</td>
<td align="center">0011</td>
</tr>
<tr>
<td align="center">结果</td>
<td align="center">7</td>
<td align="center">0111</td>
</tr>
</tbody></table>
<h3 id="10-5"><a href="#10-5" class="headerlink" title="10 | 5"></a>10 | 5</h3><table>
<thead>
<tr>
<th align="center">标识</th>
<th align="center">DEC</th>
<th align="center">BIN</th>
</tr>
</thead>
<tbody><tr>
<td align="center">数一</td>
<td align="center">2</td>
<td align="center">0010</td>
</tr>
<tr>
<td align="center">数二</td>
<td align="center">5</td>
<td align="center">0101</td>
</tr>
<tr>
<td align="center">结果</td>
<td align="center">7</td>
<td align="center">0111</td>
</tr>
</tbody></table>
<h1 id="异或-xor运算"><a href="#异或-xor运算" class="headerlink" title="异或 xor运算 ^"></a>异或 xor运算 ^</h1><blockquote>
<p>同位不同结果为1</p>
</blockquote>
<h3 id="5-3-2"><a href="#5-3-2" class="headerlink" title="5 ^ 3"></a>5 ^ 3</h3><table>
<thead>
<tr>
<th align="center">标识</th>
<th align="center">DEC</th>
<th align="center">BIN</th>
</tr>
</thead>
<tbody><tr>
<td align="center">数一</td>
<td align="center">5</td>
<td align="center">0101</td>
</tr>
<tr>
<td align="center">数二</td>
<td align="center">3</td>
<td align="center">0011</td>
</tr>
<tr>
<td align="center">结果</td>
<td align="center">6</td>
<td align="center">0110</td>
</tr>
</tbody></table>
<h3 id="10-5-1"><a href="#10-5-1" class="headerlink" title="10 ^ 5"></a>10 ^ 5</h3><table>
<thead>
<tr>
<th align="center">标识</th>
<th align="center">DEC</th>
<th align="center">BIN</th>
</tr>
</thead>
<tbody><tr>
<td align="center">数一</td>
<td align="center">2</td>
<td align="center">0010</td>
</tr>
<tr>
<td align="center">数二</td>
<td align="center">5</td>
<td align="center">0101</td>
</tr>
<tr>
<td align="center">结果</td>
<td align="center">7</td>
<td align="center">0111</td>
</tr>
</tbody></table>
<h3 id="10-10"><a href="#10-10" class="headerlink" title="10 ^ 10"></a>10 ^ 10</h3><table>
<thead>
<tr>
<th align="center">标识</th>
<th align="center">DEC</th>
<th align="center">BIN</th>
</tr>
</thead>
<tbody><tr>
<td align="center">数一</td>
<td align="center">7</td>
<td align="center">0111</td>
</tr>
<tr>
<td align="center">数二</td>
<td align="center">7</td>
<td align="center">0111</td>
</tr>
<tr>
<td align="center">结果</td>
<td align="center">0</td>
<td align="center">0000</td>
</tr>
</tbody></table>
<h1 id="非-not运算"><a href="#非-not运算" class="headerlink" title="非 not运算 ~"></a>非 not运算 ~</h1><blockquote>
<p>按位取反</p>
</blockquote>
<h3 id="5"><a href="#5" class="headerlink" title="~ 5"></a>~ 5</h3><table>
<thead>
<tr>
<th align="center">标识</th>
<th align="center">DEC</th>
<th align="center">BIN</th>
</tr>
</thead>
<tbody><tr>
<td align="center">数一</td>
<td align="center">5</td>
<td align="center">0101</td>
</tr>
<tr>
<td align="center">结果</td>
<td align="center">-6</td>
<td align="center">1010</td>
</tr>
</tbody></table>
<h1 id="左移位-shl运算"><a href="#左移位-shl运算" class="headerlink" title="左移位 shl运算 &lt;&lt;"></a>左移位 shl运算 &lt;&lt;</h1><blockquote>
<p>左移2n位后，低位补0</p>
</blockquote>
<h3 id="5-2"><a href="#5-2" class="headerlink" title="5 &lt;&lt; 2"></a>5 &lt;&lt; 2</h3><table>
<thead>
<tr>
<th align="center">标识</th>
<th align="center">DEC</th>
<th align="center">BIN</th>
</tr>
</thead>
<tbody><tr>
<td align="center">数一</td>
<td align="center">5</td>
<td align="center">0000 0101</td>
</tr>
<tr>
<td align="center">结果</td>
<td align="center">10</td>
<td align="center">0000 1010</td>
</tr>
</tbody></table>
<h1 id="右移位-shr运算"><a href="#右移位-shr运算" class="headerlink" title="右移位 shr运算 &gt;&gt;"></a>右移位 shr运算 &gt;&gt;</h1><blockquote>
<p>右移2n位，高位补0</p>
</blockquote>
<h3 id="4-2"><a href="#4-2" class="headerlink" title="4 &gt;&gt; 2"></a>4 &gt;&gt; 2</h3><table>
<thead>
<tr>
<th align="center">标识</th>
<th align="center">DEC</th>
<th align="center">BIN</th>
</tr>
</thead>
<tbody><tr>
<td align="center">数一</td>
<td align="center">4</td>
<td align="center">0000 0100</td>
</tr>
<tr>
<td align="center">结果</td>
<td align="center">2</td>
<td align="center">0000 0010</td>
</tr>
</tbody></table>
<blockquote>
<p>易失去精度，无法恢复</p>
</blockquote>
<h3 id="5-2-1"><a href="#5-2-1" class="headerlink" title="5 &gt;&gt; 2"></a>5 &gt;&gt; 2</h3><table>
<thead>
<tr>
<th align="center">标识</th>
<th align="center">DEC</th>
<th align="center">BIN</th>
</tr>
</thead>
<tbody><tr>
<td align="center">数一</td>
<td align="center">5</td>
<td align="center">0000 0101</td>
</tr>
<tr>
<td align="center">结果</td>
<td align="center">2</td>
<td align="center">0000 0010</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>Think</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2017/02/09/hello-world/</url>
    <content><![CDATA[<blockquote>
<p>Hello World </p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>只做正确的事情，并持续输出价值</title>
    <url>/2017/02/24/%E5%8F%AA%E5%81%9A%E6%AD%A3%E7%A1%AE%E7%9A%84%E4%BA%8B%E6%83%85%EF%BC%8C%E5%B9%B6%E6%8C%81%E7%BB%AD%E8%BE%93%E5%87%BA%E4%BB%B7%E5%80%BC/</url>
    <content><![CDATA[<blockquote>
<p>转载<br><a class="link"   href="http://www.nowamagic.net/librarys/veda/detail/2673" >http://www.nowamagic.net/librarys/veda/detail/2673 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 只做正确的事情，并持续输出价值</p>
</blockquote>
<p>最近经常有网友问，博客为啥更新得这么慢。这一段时间几乎都在忙一些琐事，但是任何忙都是借口，其实都是因为懒。顺便做个广告，现在博客很少更新技术类文章了，技术文章大部分都以专题的形式更新在 现代魔法学院 里。有任何意见都欢迎给我提一下～博客现在主要是发表一些自己的思考。</p>
<h3 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h3><p>一个朋友昨天跟我聊天，说离职了，准备加入一个手游创业团队，薪酬挺高的，比之前的工作要高两倍有多。我当时敷衍过去了，但是心里却有别的想法。</p>
<p>我老婆是个重度“游戏是电子海洛因”观点坚持者，或多或少也影响了我的一些看法。我也玩游戏，但是是偶尔玩玩，玩多了绝对会被骂，之前就发过这么一条微博：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_02_24_01.png"
                     
                ></p>
<p>前几年多玩的一个朋友内推我，后来因为老婆（那会是女朋友）的脸色，没去成，那时多玩还没上市。她说，好端端地，不要去做游戏毒害别人。我也玩游戏，我对游戏不存在偏见，也不抗拒，正是因为我也玩游戏，我深切地体会到，游戏无法给我们的人生带来多少积极的影响。我们用有限的生命时间去博无限的游戏时间，是很不值得的一件事。</p>
<p>比如现在我也有在玩“炉石传说”，周末有空也偶尔上YY、斗鱼看看直播，发现一些热门主播竟然有几万人同时在看。据说荷尔蒙经济效应很明显，一些热门的妹子主播每个月大概有几万的直播收入，甚至更高，因为每天晚上都有几万屌丝同时在线看直播。还有些人花几千上万元购买卡包，托炉石传说的福，网易上个季度的收入创了新高。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_02_24_02.jpg"
                     
                ></p>
<p>这不是一个好的现象。屌丝们虽然会因为游戏而快乐，但到头来时间、精力还有金钱都被游戏消耗太多，以至于一事难成。大部分人是缺乏远见的，一个常见的例子就是，现在给你100块，和明年给你500块，二选一，绝大部分人会选择前者。贪图眼前的小利而看不到未来是人类的本能。比如贪图一时游戏的快乐，而忘了有更重要的事去做。而互联网，则是人类欲望的集合点。互联网经济大部分都是建立在人类的欲望之上的：</p>
<ul>
<li>我要看视频，于是有一大堆视频网站。</li>
<li>我要打游戏，于是一大堆网游。</li>
<li>我要购物，于是有一大堆电商。</li>
<li>……<br>可以说，任何互联网产品都是为了满足人类的欲望（需求）而产生的。</li>
</ul>
<h3 id="互联网有毒"><a href="#互联网有毒" class="headerlink" title="互联网有毒"></a>互联网有毒</h3><p>我们必须要注意这么一点，<strong>互联网对大部分人来说是有毒的</strong>。</p>
<p>为什么这么说呢？首先，你要知道，什么东西对你最重要，那就是时间和注意力，这两样东西是你有所成就的两个必要条件。</p>
<p>比如你看微博，关注那些八卦碎片信息，无形中你的时间、注意力还有意志力就会被消耗，看完了你也没多少精力去干活了。比如你看视频，网上的一些连续剧，同样消耗你的时间和注意力，并且还会影响你的大脑，让你去回味故事情节，占用你的大脑。游戏更不用说了，沉迷游戏基本等于荒废，这个我是有经验的。</p>
<p>文艺作品（书籍影视等）是可以改变大脑的。比如你看了一篇鸿篇巨著，有可能会影响你的一生。但是一档连续剧，可能看了没一个月你连人物都忘记了。所以优秀的文艺作品可以流芳百世，影响无数人，而快餐影视仅仅是快餐而已，甚至传播一些错误的价值观，快餐毕竟对身体不怎么好。插个小段子，我中学的时候特别喜欢《棋魂》这部动画，我那时傻傻地要像主人公全部时间花在围棋上一样把全部时间花在功课上（所谓的追求神之一身、最好的一手），其结果是，每次大考我必然是全年级第一，那会可是传说一般的存在。优秀的动漫作品对我影响真的很大很大。直到现在我也还是很喜欢棋魂，可能十年后，它还会影响着我。</p>
<p>不恰当地使用互联网，你的时间、注意力就会被投入到一个无底洞，从而让你无法发现你需要去做的那些正确的事，或者发现了又没有足够的时间与精力投入，其结果就是一事难成。</p>
<p>也就是说：</p>
<pre><code>* 如果你想在编程有很深的造诣，那么最好把游戏卸载了，不要关注那些游戏直播，也不要关注那些游戏信息，你要做的是每晚每晚都去练习编程，去Github拿一些优秀的开源项目代码回来琢磨，理解各编程大师的想法；
* 如果你想在数学有所建树，那么就不要老是刷微博、看SNS Feed流，留意那些可有可无的八卦信息，你要做的是每晚每晚努力去专研数学，体验思考的乐趣与想通问题带来的满足感与成就感；
* 如果你想钢琴弹得很好，那么就不要老是玩手机，各种娱乐应用，也不要因为想放松而去看连续剧，你要做的是每晚每晚努力去练习钢琴，因为你想把琴练得很好，那么你心里最好只有琴。
* ……
</code></pre>
<p>大家都知道，一件事情，进入状态很难。而出状态，则可能是分分秒秒的事。我们的技艺，只有在沉醉状态中才能有效提高。也许有哪个高人可以边玩LOL边写代码，但我觉得，这种人应该不多吧。</p>
<p>而站在互联网产品提供这边，我们要做的，并不是要去做那些哗众取宠的的东西，比如什么“天天酷跑天天爱消除天天爱干嘛”，什么“美拍闪拍各种拍”，而是要专注于给用户提供价值的东西，正确的东西，比如百度前首席架构师林仕鼎从百度离职，做了“云校”，试图通过互联网和大数据，“再一次，定义教育”。我觉得，这是一件很正确、很有意义的事。同样的，网易公开课也是一个很不错的东西。</p>
<p>那么什么才是正确的事呢？这个就是我一直坚持的“普世价值观”，那些放在大部分情况都是对别人有价值的事情。比如最近我看到的“防蓝光镜片”这事，佩戴之后可以减少电子设备蓝光激发对眼睛的伤害，我觉得就是一件很正确、很有意义的事情。不要小看来自电脑手机屏幕的蓝光辐射，这个问题会越来越严重。防蓝光镜片可以缓解这个问题，那么这就是一件很有意义的事，正确的事，因为这事对别人有价值。假若这个镜片的制作发起人沉迷LOL小学生联盟，那么这个好东西就会出现得比较晚。</p>
<p>我老婆是个重度“腾讯系”用户，每天都看微信朋友圈，逛QQ空间，挂QQ然后看QQ群…… 我都说她好多次，让她注意别浪费太多时间在这些无聊的Feed上面了。她朋友圈、QQ空间无非就是一些哪个同事结婚了，哪个同学去哪玩了，哪个朋友在秀美食什么的，也看不懂她为什么如此乐此不疲。反正我觉得，腾讯的那些所谓社交产品，消耗了她很多时间和注意力。</p>
<p>而我则很少用腾讯的东西，甚至QQ都很少用，相对地，我则是“Google系”或者“阿里系”用户。阿里巴巴的产品我用得很多，比如我的网站就是放在阿里云的，网站收入虽然少但毕竟也有，而且也能对外持续输出我的价值。我的一些闲钱也放在余额宝里，收益至少比银行高，对我也是有价值的，支付宝转账到各行都是免费，这非常方便。我装修的电器、门、油漆什么的都是在聚划算买的，也帮我省钱了。所以，我认为阿里巴巴是一家让人尊敬的公司，因为它坚持做正确的事，对用户有价值的事。Google也是一家让人尊敬的公司，他做的很多产品都对用户很有价值，而且大部分是免费的。腾讯虽然口号是成为“最受尊敬的互联网企业”，但是从他的大半收入是靠游戏和社交来看，我觉得有点背道而驰。</p>
<p>一件事情，如果不适用于普世价值，再怎么美化也没用。你可以说游戏有多少好处，但是你却无法否认，他消耗了多少生命，让多少人事业踌躇不前。</p>
<p>根基建立在普世价值之上的公司可以长久，马云说，阿里巴巴要活102年，如果阿里巴巴坚持他的价值观，我觉得没问题。而一些游戏公司，很可能就会因为一款游戏的热情消退而落幕，比如第九城市。一家日本的和服店可以经营450年，你敢信？原因很简单，坚持做正确的事情，并持续输出价值。</p>
<p>我们不需要开创多么伟大的事业，只要找到你正确的事情，坚持就可以了，哪怕是一间和服店。</p>
<p>回到前面说的那个要去做手游的朋友，确实，手游是下一个引爆点，必定能够赚不少钱。但是，你做的游戏越成功，就有越多人把时间消耗在你的游戏中，你的利益来自于损害用户的利益，但如果你不介意，也没事，这样的人多了去了。前段时间在贴吧看到一个高三学生发了一个帖子，说炉石毁了他，让他分数很低，找不到学校读书什么的。嘛，沉迷游戏耽误人的事也不是很罕见了。</p>
<p>所以，假如你想做点事情，首先考虑的是，它能不能对别人产生价值，而不是能不能赚钱。如果只考虑赚钱，到头来很可能赚不到钱。而一切围绕着对用户产生价值，并且持续每天不断地输出价值，一切都会纷至沓来。</p>
]]></content>
      <tags>
        <tag>转载</tag>
      </tags>
  </entry>
  <entry>
    <title>数据挖掘-K-Means</title>
    <url>/2017/03/21/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98-K-Means/</url>
    <content><![CDATA[<blockquote>
<p>类内数据点越近越好，类间数据点越远越好。</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">属性</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">优点</td>
<td align="center">容易实现</td>
</tr>
<tr>
<td align="center">缺点</td>
<td align="center">可能收敛到局部最小值，在大规模数据集上收敛较慢</td>
</tr>
<tr>
<td align="center">适用</td>
<td align="center">数值型</td>
</tr>
</tbody></table>
<p>输入：分类个数k，包含在n个数据对象的数据集</p>
<p>输出：k个聚类</p>
<p>步骤：</p>
<ol>
<li>从n个数据对象中任意选取k个对象作为初始聚类中心</li>
<li>分别计算每个对象到各个聚类中心距离，把对象分配到距离最近的聚类中</li>
<li>所有对象分配后，重新计算k个聚类的中心</li>
<li>与前一次计算得到k个聚类中心比较，如果聚类中心发生变化，转步骤2，否则转步骤</li>
<li>得出结果</li>
</ol>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_03_05_1.jpg"
                     
                ></p>
]]></content>
      <tags>
        <tag>DataMining</tag>
      </tags>
  </entry>
  <entry>
    <title>开源协议比较</title>
    <url>/2017/02/22/%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE%E6%AF%94%E8%BE%83/</url>
    <content><![CDATA[<h1 id="五种开源协议的比较-BSD，Apache，GPL，LGPL，MIT"><a href="#五种开源协议的比较-BSD，Apache，GPL，LGPL，MIT" class="headerlink" title="五种开源协议的比较(BSD，Apache，GPL，LGPL，MIT)"></a>五种开源协议的比较(BSD，Apache，GPL，LGPL，MIT)</h1><h3 id="什么是软件许可协议？"><a href="#什么是软件许可协议？" class="headerlink" title="什么是软件许可协议？"></a>什么是软件许可协议？</h3><pre><code>通俗来讲，许可协议是指用来授权其他人具有某种使用你的作品的权利。
</code></pre>
<p>依靠许可协议将你的作品对外开源或者对你的作品的各个方面逐一进行授权，是一个不错的方法(WordPress, Drupal 和许多其它的内容管理系统都是开源软件)。一旦对外开源，你将失去所有对你的作品的版权，别人也没有义务将你标注为作品的原创者或捐献者。</p>
<p>开源许可协议 使人们免去了研究那些专业的许可条款的麻烦，使人们更方便的对开源项目贡献出自己的代码。而且它还能保护你作为作品的原创作者，确保你至少拥有由于贡献参与而带来的署名荣誉。它还能用来阻止其他人企图声明对你的作品拥有所有权的行为。</p>
<p>但是很多的软件作者和设计者都对各种不同的开源许可协议的内容和含义不甚了了。当你选择了某种开源许可协议时，你都放弃了哪些权力？在没有能明白各种开源协议的确切含义前，在不知道它们最适用于什么情况下时，软件开发者不可能在关于哪个许可协议最适合自己的软件的问题上做出准确的抉择。</p>
<h3 id="BSD开源协议-original-BSD-license、FreeBSD-license、Original-BSD-license"><a href="#BSD开源协议-original-BSD-license、FreeBSD-license、Original-BSD-license" class="headerlink" title="BSD开源协议(original BSD license、FreeBSD license、Original BSD license)"></a>BSD开源协议(original BSD license、FreeBSD license、Original BSD license)</h3><blockquote>
<p>BSD开源协议是一个给于使用者很大自由的协议。基本上使用者可以”为所欲为”，可以自由的使用，修改源代码，也可以将修改后的代码作为开源或者专有软件再发布。</p>
</blockquote>
<blockquote>
<p>但”为所欲为”的前提当你发布使用了BSD协议的代码，或则以BSD协议代码为基础做二次开发自己的产品时，需要满足三个条件：</p>
</blockquote>
<blockquote>
<p>如果再发布的产品中包含源代码，则在源代码中必须带有原来代码中的BSD协议。如果再发布的只是二进制类库&#x2F;软件，则需要在类库&#x2F;软件的文档和版权声明中包含原来代码中的BSD协议。</p>
</blockquote>
<blockquote>
<p>不可以用开源代码的作者&#x2F;机构名字和原来产品的名字做市场推广。</p>
</blockquote>
<blockquote>
<p>BSD代码鼓励代码共享，但需要尊重代码作者的著作权。BSD由于允许使用者修改和重新发布代码，也允许使用或在BSD代码上开发商业软件发布和销售，因此是对商业集成很友好的协议。而很多的公司企业在选用开源产品的时候都首选BSD协议，因为可以完全控制这些第三方的代码，在必要的时候可以修改或者二次开发。</p>
</blockquote>
<h3 id="Apache-Licence-2-0-Apache-License，-Version-2-0、Apache-License，-Version-1-1、Apache-License，-Version-1-0"><a href="#Apache-Licence-2-0-Apache-License，-Version-2-0、Apache-License，-Version-1-1、Apache-License，-Version-1-0" class="headerlink" title="Apache Licence 2.0(Apache License， Version 2.0、Apache License， Version 1.1、Apache License， Version 1.0)"></a>Apache Licence 2.0(Apache License， Version 2.0、Apache License， Version 1.1、Apache License， Version 1.0)</h3><blockquote>
<p>Apache Licence是著名的非盈利开源组织Apache采用的协议。该协议和BSD类似，同样鼓励代码共享和尊重原作者的著作权，同样允许代码修改，再发布(作为开源或商业软件)。需要满足的条件也和BSD类似：</p>
</blockquote>
<blockquote>
<p>需要给代码的用户一份Apache Licence，如果你修改了代码，需要在被修改的文件中说明。<br>在延伸的代码中(修改和有源代码衍生的代码中)需要带有原来代码中的协议，商标，专利声明和其他原来作者规定需要包含的说明。</p>
</blockquote>
<blockquote>
<p>如果再发布的产品中包含一个Notice文件，则在Notice文件中需要带有Apache Licence。你可以在Notice中增加自己的许可，但不可以表现为对Apache Licence构成更改。</p>
</blockquote>
<blockquote>
<p>Apache Licence也是对商业应用友好的许可。使用者也可以在需要的时候修改代码来满足需要并作为开源或商业产品发布&#x2F;销售。</p>
</blockquote>
<h3 id="GPL-GNU-General-Public-License"><a href="#GPL-GNU-General-Public-License" class="headerlink" title="GPL(GNU General Public License)"></a>GPL(GNU General Public License)</h3><blockquote>
<p>我们很熟悉的Linux就是采用了GPL。GPL协议和BSD，Apache Licence等鼓励代码重用的许可很不一样。GPL的出发点是代码的开源&#x2F;免费使用和引用&#x2F;修改&#x2F;衍生代码的开源&#x2F;免费使用，但不允许修改后和衍生的代码做为闭源的商业软件发布和销售。这也就是为什么我们能用免费的各种linux，包括商业公司的linux和linux上各种各样的由个人，组织，以及商业软件公司开发的免费软<br>件了。</p>
</blockquote>
<blockquote>
<p>GPL协议的主要内容是只要在一个软件中使用(”使用”指类库引用，修改后的代码或者衍生代码)GPL协议的产品，则该软件产品必须也采用GPL协议，既必须也是开源和免费。这就是所谓的”传染性”。GPL协议的产品作为一个单独的产品使用没有任何问题，还可以享受免费的优势。</p>
</blockquote>
<blockquote>
<p>由于GPL严格要求使用了GPL类库的软件产品必须使用GPL协议，对于使用GPL协议的开源代码，商业软件或者对代码有保密要求的部门就不适合集成&#x2F;采用作为类库和二次开发的基础。</p>
</blockquote>
<blockquote>
<p>其它细节如再发布的时候需要伴随GPL协议等和BSD&#x2F;Apache等类似。</p>
</blockquote>
<h3 id="LGPL-GNU-Lesser-General-Public-License"><a href="#LGPL-GNU-Lesser-General-Public-License" class="headerlink" title="LGPL(GNU Lesser General Public License)"></a>LGPL(GNU Lesser General Public License)</h3><blockquote>
<p>LGPL是GPL的一个为主要为类库使用设计的开源协议。和GPL要求任何使用&#x2F;修改&#x2F;衍生之GPL类库的的软件必须采用GPL协议不同。LGPL允许商业软件通过类库引用(link)方式使用LGPL类库而不需要开源商业软件的代码。这使得采用LGPL协议的开源代码可以被商业软件作为类库引用<br>并发布和销售。</p>
</blockquote>
<blockquote>
<p>但是如果修改LGPL协议的代码或者衍生，则所有修改的代码，涉及修改部分的额外代码和衍生的代码都必须采用LGPL协议。因此LGPL协议的开源代码很适合作为第三方类库被商业软件引用，但不适合希望以LGPL协议代码为基础，通过修改和衍生的方式做二次开发的商业软件采用。</p>
</blockquote>
<blockquote>
<p>GPL&#x2F;LGPL都保障原作者的知识产权，避免有人利用开源代码复制并开发类似的产品</p>
</blockquote>
<h3 id="MIT-MIT"><a href="#MIT-MIT" class="headerlink" title="MIT(MIT)"></a>MIT(MIT)</h3><blockquote>
<p>MIT是和BSD一样宽范的许可协议，作者只想保留版权，而无任何其他了限制.也就是说，你必须在你的发行版里包含原许可协议的声明，无论你是以二进制发布的还是以源代码发布的。</p>
</blockquote>
<h3 id="图示"><a href="#图示" class="headerlink" title="图示"></a>图示</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/LICENES.png"
                      alt="LICENES"
                ></p>
]]></content>
      <tags>
        <tag>LICENES</tag>
      </tags>
  </entry>
  <entry>
    <title>数据挖掘-Apriori</title>
    <url>/2017/03/16/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98-Apriori/</url>
    <content><![CDATA[<blockquote>
<p>从海量数据中挖掘可信频繁项集</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">属性</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">优点</td>
<td align="center">易编码实现</td>
</tr>
<tr>
<td align="center">缺点</td>
<td align="center">大数据集运行缓慢</td>
</tr>
<tr>
<td align="center">适用</td>
<td align="center">数值型，标称型</td>
</tr>
</tbody></table>
<h1 id="名词概念"><a href="#名词概念" class="headerlink" title="名词概念"></a>名词概念</h1><table>
<thead>
<tr>
<th align="center">名词</th>
<th align="center">意义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">association analysis</td>
<td align="center">关联分析</td>
</tr>
<tr>
<td align="center">association rule learning</td>
<td align="center">关联规则学习</td>
</tr>
<tr>
<td align="center">frequent item set</td>
<td align="center">频繁项集</td>
</tr>
<tr>
<td align="center">association rule</td>
<td align="center">关联规则</td>
</tr>
<tr>
<td align="center">frequent</td>
<td align="center">频繁</td>
</tr>
<tr>
<td align="center">support</td>
<td align="center">支持度</td>
</tr>
<tr>
<td align="center">confidence</td>
<td align="center">可信度</td>
</tr>
</tbody></table>
<pre><code>a priori 一个先验 使用知识作为条件进行推断
a postriori 一个后验 使用结果作为条件检测
</code></pre>
<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>如果某个项集是频繁项集，那么他的子项集也是频繁项集。反之，如果一个项集是非频繁项集，那么他的所有超集也是非频繁项集。</p>
<ol>
<li>收集数据</li>
<li>准备数据</li>
<li>分析数据</li>
<li>训练算法</li>
<li>测试算法</li>
<li>使用算法</li>
</ol>
<hr>
<ul>
<li>首先发现频繁项集</li>
<li>然后计算出关联规则</li>
</ul>
<h3 id="生成候选项集"><a href="#生成候选项集" class="headerlink" title="生成候选项集"></a>生成候选项集</h3><ul>
<li>记录训练数据集中每一条数据为候选项集</li>
<li>检查每一个候选项集属于数据集子集的个数</li>
<li>对于候选项集如果最小值不小于支持度，则保留该项集</li>
<li>返回所有频繁项集</li>
</ul>
]]></content>
      <tags>
        <tag>DataMining</tag>
      </tags>
  </entry>
  <entry>
    <title>数据挖掘-KNN</title>
    <url>/2017/03/06/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98-KNN/</url>
    <content><![CDATA[<blockquote>
<p>KNN 近邻算法：测量不同特征值之间距离进行分类</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">属性</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">优点</td>
<td align="center">精度高，对异常值不敏感，无数据输入假定</td>
</tr>
<tr>
<td align="center">缺点</td>
<td align="center">计算复杂度高，空间复杂度高</td>
</tr>
<tr>
<td align="center">适用</td>
<td align="center">数值型，标称型</td>
</tr>
</tbody></table>
<h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><ol>
<li><p>存在一个训练集，并且每个数据都存在标签</p>
</li>
<li><p>输入没有标签的新数据</p>
</li>
<li><p>将新数据与训练集特征进行比较</p>
</li>
<li><p>提取训练集中特征最相似的分类标签分类</p>
<p> 一般只选择训练集中的前 K 个最相似数据</p>
</li>
</ol>
]]></content>
      <tags>
        <tag>DataMining</tag>
      </tags>
  </entry>
  <entry>
    <title>数据挖掘-PCA降维</title>
    <url>/2017/03/13/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98-PCA%E9%99%8D%E7%BB%B4/</url>
    <content><![CDATA[<blockquote>
<p>若存在N个M维的训练集，N与M不小于百万级，该如何处理？</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">属性</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">优点</td>
<td align="center">降低数据的复杂性，识别最重要的多个特征</td>
</tr>
<tr>
<td align="center">缺点</td>
<td align="center">不一定需要，有一定损失有用信息的可能</td>
</tr>
<tr>
<td align="center">适用</td>
<td align="center">数值型</td>
</tr>
</tbody></table>
<h1 id="名词概念"><a href="#名词概念" class="headerlink" title="名词概念"></a>名词概念</h1><table>
<thead>
<tr>
<th align="center">名词</th>
<th align="center">意义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">dimensionality reduction</td>
<td align="center">降维</td>
</tr>
<tr>
<td align="center">principal component analysis</td>
<td align="center">PCA主元分析</td>
</tr>
<tr>
<td align="center">factor analysis</td>
<td align="center">FA因子分析</td>
</tr>
<tr>
<td align="center">latent variable</td>
<td align="center">隐变量</td>
</tr>
<tr>
<td align="center">independent component analysis</td>
<td align="center">ICA独立成分分析</td>
</tr>
</tbody></table>
<hr>
<h1 id="降维方式"><a href="#降维方式" class="headerlink" title="降维方式"></a>降维方式</h1><ol>
<li>PCA （ Principal Component Analysis ）主元分析。是一种掌握事物主要矛盾的统计分析方法，它可以从多元事物中解析出主要影响因素，揭示事物的本质，简化复杂的问题。计算主成分的目的是将高维数据投影到较低维空间。给定 n 个变量的 m 个观察值，形成一个 n ′ m 的数据矩阵， n 通常比较大。</li>
<li>FA（Factor Analysis）因子分析。从观察数据中找出观察不到的隐变量（观察数据 &#x3D; （隐变量 + 某些噪声）线性组合）</li>
<li>ICA（Independent Component Analysis）独立成分分析。假设数据从N个数据源获取，数据源之间统计上相互独立，如果数据源的数目少于观察数据的数目，则可以实现降维过程。</li>
</ol>
<p>对于一个由多个变量描述的复杂事物，人们难以认识，那么PCA降维就是用来减少不确定干扰变量或者对分析结果影响较小的变量，以此达到降低训练集维度的效果。这样做的优势是分解难度以及提高效率。</p>
<h1 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h1><ul>
<li>使数据集更易使用</li>
<li>降低很多算法开销</li>
<li>去除噪声</li>
<li>使结果易懂</li>
</ul>
<h5 id="个人的一点浅见，之所以降维是因为高纬度的可视化人类或许无法有共识的理解，人是三维生物，低维度生物无法理解高维度，因为他们无法感知，但是高维度生物却轻松掌握低纬度，就像我们看一维度的坐标，与二维度的横竖坐标，所以每一个人对与四维度以及以上都会有自己想象的模型，或许是一种超矩阵立方体，或许是蠕虫形状的无限切面，所以将维度降低到一个普遍可以接受并且符合客观的标准，更有助于人类消化与学习。"><a href="#个人的一点浅见，之所以降维是因为高纬度的可视化人类或许无法有共识的理解，人是三维生物，低维度生物无法理解高维度，因为他们无法感知，但是高维度生物却轻松掌握低纬度，就像我们看一维度的坐标，与二维度的横竖坐标，所以每一个人对与四维度以及以上都会有自己想象的模型，或许是一种超矩阵立方体，或许是蠕虫形状的无限切面，所以将维度降低到一个普遍可以接受并且符合客观的标准，更有助于人类消化与学习。" class="headerlink" title="个人的一点浅见，之所以降维是因为高纬度的可视化人类或许无法有共识的理解，人是三维生物，低维度生物无法理解高维度，因为他们无法感知，但是高维度生物却轻松掌握低纬度，就像我们看一维度的坐标，与二维度的横竖坐标，所以每一个人对与四维度以及以上都会有自己想象的模型，或许是一种超矩阵立方体，或许是蠕虫形状的无限切面，所以将维度降低到一个普遍可以接受并且符合客观的标准，更有助于人类消化与学习。"></a>个人的一点浅见，之所以降维是因为高纬度的可视化人类或许无法有共识的理解，人是三维生物，低维度生物无法理解高维度，因为他们无法感知，但是高维度生物却轻松掌握低纬度，就像我们看一维度的坐标，与二维度的横竖坐标，所以每一个人对与四维度以及以上都会有自己想象的模型，或许是一种超矩阵立方体，或许是蠕虫形状的无限切面，所以将维度降低到一个普遍可以接受并且符合客观的标准，更有助于人类消化与学习。</h5><blockquote>
<p>有效的降维可以达到预期效果，但是降维往往是不可逆的，若选取了错误的维度消除，训练出的规则也必将偏离。</p>
</blockquote>
]]></content>
      <tags>
        <tag>DataMining</tag>
      </tags>
  </entry>
  <entry>
    <title>数据挖掘-SVM</title>
    <url>/2017/03/09/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98-SVM/</url>
    <content><![CDATA[<blockquote>
<p>SVM：寻找一条最优的分界线使得它到两边的距离 <strong>margin</strong> 都最大。</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">属性</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">优点</td>
<td align="center">泛化错误率低，计算开销不大，易于理解</td>
</tr>
<tr>
<td align="center">缺点</td>
<td align="center">对参数调节和核函数选择敏感，原始分类器不参加修改适合处理二类问题</td>
</tr>
<tr>
<td align="center">适用</td>
<td align="center">数值型，标称型</td>
</tr>
</tbody></table>
<h1 id="名词概念"><a href="#名词概念" class="headerlink" title="名词概念"></a>名词概念</h1><table>
<thead>
<tr>
<th align="center">名词</th>
<th align="center">意义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">data</td>
<td align="center">数据</td>
</tr>
<tr>
<td align="center">classifier</td>
<td align="center">分类器</td>
</tr>
<tr>
<td align="center">optimization</td>
<td align="center">最优解</td>
</tr>
<tr>
<td align="center">kernel</td>
<td align="center">核函数</td>
</tr>
<tr>
<td align="center">hyperplane</td>
<td align="center">超平面</td>
</tr>
</tbody></table>
<blockquote>
<p><strong>SVM - Support Vector Machine 支持向量机</strong>，为一种有监督机器（<strong>supervised</strong> learning）算法，属于分类（<strong>classification</strong>）的范畴。在数据挖掘的应用中，与无监督（<strong>unsupervised</strong>）的聚类（<strong>Clustering</strong>）相对应和区别。</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_03_07_1.jpg"
                     
                ></p>
<p>在这种情况下边缘加粗的几个数据点就叫做 <strong>Support Vector</strong>。</p>
<h1 id="核函数"><a href="#核函数" class="headerlink" title="核函数"></a>核函数</h1><pre><code>在二维平面上可用一个线性函数可以将两类样本完全分开叫做线性可分。
</code></pre>
<p>事实上，大部分数据并不是线性可分的，这个时候满足这样条件的超平面就根本不存在。对于非线性的情况，SVM 的处理方法是选择一个核函数（<strong>Kernel</strong>） ，通过将数据映射到高维空间，<br>拓展至任意n维乃至无限维空间，来解决在原始空间中线性不可分的问题。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_03_07_3.gif"
                     
                ></p>
<p>核函数的价值在于它虽然也是将特征进行从低维到高维的转换，但核函数事先在低维上进行计算，而将实质上的分类效果表现在了高维上，避免了直接在高维空间中的复杂计算。</p>
<h1 id="常见分类模型"><a href="#常见分类模型" class="headerlink" title="常见分类模型"></a>常见分类模型</h1><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_03_07_2.png"
                     
                ></p>
]]></content>
      <tags>
        <tag>DataMining</tag>
      </tags>
  </entry>
  <entry>
    <title>数据挖掘-Spark</title>
    <url>/2017/03/28/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98-Spark/</url>
    <content><![CDATA[<blockquote>
<p>Spark : 借鉴了MapReduce之上发展而来的，继承了其分布式并行计算的优点并改进了MapReduce明显的缺陷</p>
</blockquote>
<h1 id="运行模式"><a href="#运行模式" class="headerlink" title="运行模式"></a>运行模式</h1><table>
<thead>
<tr>
<th align="center">环境</th>
<th align="center">描述</th>
<th align="center">模式</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><strong>local</strong></td>
<td align="center">本地单进程模式</td>
<td align="center">本地模式</td>
</tr>
<tr>
<td align="center"><strong>standalone</strong></td>
<td align="center">分布式集群,Master-Worker架构（或者Master-Slave），<br>Master负责调度，Worker负责具体Task的执行</td>
<td align="center">集群模式</td>
</tr>
<tr>
<td align="center"><strong>on yarn&#x2F;mesos</strong></td>
<td align="center">通过YARN或Mesos作为资源管理，Spark作为调度控制</td>
<td align="center">集群模式</td>
</tr>
<tr>
<td align="center"><strong>on cloud</strong></td>
<td align="center">AWS（Amazom Web Services）的EC2（Elastic Compute Cloud）<br>服务</td>
<td align="center">集群模式</td>
</tr>
</tbody></table>
<h1 id="Spark生态系统"><a href="#Spark生态系统" class="headerlink" title="Spark生态系统"></a>Spark生态系统</h1><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_03_21_1.bmp"
                     
                ></p>
<ol>
<li>Spark SQL : 允许直接处理RDD，也可查询Hive、HBase等外部数据源。</li>
<li>Spark Streaming ： 实时数据流处理组件（Storm）。</li>
<li>MLlib : 机器学习算法，含聚类、分类、回归、协同过滤。</li>
<li>GraphX : 用于图计算API。</li>
<li>Spark Core : Spark的基本功能，内存计算、任务调度、部署模式、故障恢复、存储管理等</li>
<li>Standalone Scheduler : 分布式独立运行。</li>
<li>YARN : Apache Hadoop YARN （Yet Another Resource Negotiator，另一种资源协调者）是一种新的 Hadoop 资源管理器。</li>
<li>Mesos : Mesos是Apache下的开源分布式资源管理框架，它被称为是分布式系统的内核。</li>
</ol>
<h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><table>
<thead>
<tr>
<th align="center">概念</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">RDDs</td>
<td align="center">Resillient Distributed DataSets，弹性分布式数据集，是分布式内存的一个抽象概念，提供一种高度受限的共享内存模型</td>
</tr>
<tr>
<td align="center">DAG</td>
<td align="center">Directed Acyclic Graph，有向无环图，反映RDD之间的依赖关系</td>
</tr>
<tr>
<td align="center">Application</td>
<td align="center">Spark的应用程序，包含一个Driver program和若干Executor</td>
</tr>
<tr>
<td align="center">Driver Program</td>
<td align="center">运行Application的main()函数并且创建SparkContext</td>
</tr>
<tr>
<td align="center">Cluster Manager</td>
<td align="center">在集群上获取资源的外部服务(例如：Standalone、Mesos、Yarn)</td>
</tr>
<tr>
<td align="center">Worker Node</td>
<td align="center">集群中任何可以运行Application代码的节点，运行一个或多个Executor进程</td>
</tr>
<tr>
<td align="center">Executor</td>
<td align="center">是为Application运行在工作节点（Worker Node）上的一个进程，该进程负责运行Task，并且负责将数据存在内存或者磁盘上。每个Application都会申请各自的Executor来处理任务</td>
</tr>
<tr>
<td align="center">SparkContext</td>
<td align="center">Spark应用程序的入口，负责调度各个运算资源，协调各个Worker Node上的Executor</td>
</tr>
<tr>
<td align="center">Job</td>
<td align="center">一个Job含多个RDD及作用于RDD上的各种操作，SparkContext提交的具体Action操作，常和Action对应</td>
</tr>
<tr>
<td align="center">Stage</td>
<td align="center">是Job的基本调度单位，一个Job分为多组Task，每组Task被称为Stage，或者称为TaskSet，代表了一组关联的、相互之间没有Shuffle依赖关系的任务组成的任务集</td>
</tr>
<tr>
<td align="center">Task</td>
<td align="center">运行在Executor上的工作单元</td>
</tr>
<tr>
<td align="center">DAGScheduler</td>
<td align="center">根据Job构建基于Stage的DAG，并提交Stage给TaskScheduler</td>
</tr>
<tr>
<td align="center">TaskScheduler</td>
<td align="center">将Taskset提交给Worker node集群运行并返回结果</td>
</tr>
<tr>
<td align="center">Transformations</td>
<td align="center">是Spark API的一种类型，Transformation返回值还是一个RDD，所有的Transformation采用的都是懒策略，如果只是将Transformation提交是不会执行计算的</td>
</tr>
<tr>
<td align="center">Action</td>
<td align="center">是Spark API的一种类型，Action返回值不是一个RDD，而是一个scala集合；计算只有在Action被提交的时候计算才被触发</td>
</tr>
</tbody></table>
<h1 id="Spark运行流程"><a href="#Spark运行流程" class="headerlink" title="Spark运行流程"></a>Spark运行流程</h1><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_03_21_2.bmp"
                     
                ></p>
<ol>
<li>提交一个Application后，首先构建基本运行环境，即由Driver创建一个SparkContext，由SparkContext负责和资源管理器（Cluster Manager）的通信，以及资源的申请、任务的分配和监控等。SparkContext会向资源管理器注册并申请运行Executor的资源；</li>
<li>资源管理器为Executor分配资源，启动Executor进程，Executor运行情况随着“心跳”发送到资源管理器上；</li>
<li>SparkContext根据RDD的依赖关系构建DAG图，DAG图提交给DAGScheduler进行解析，将DAG图分解成Stage，并计算Stage间的依赖关系，然后将一个个TaskSet（即Stage）提交给底层调度器TaskScheduler进行处理；Executor向SparkContext申请Task，TaskScheduler将Task发放给Executor运行，同时，SparkContext将应用程序代码发送给Executor；</li>
<li>Task在Executor上运行，结果反馈给TaskScheduler，然后反馈给DAGScheduler，运行完毕后写入数据，并释放资源。</li>
</ol>
<h1 id="Spark架构特点"><a href="#Spark架构特点" class="headerlink" title="Spark架构特点"></a>Spark架构特点</h1><ul>
<li>每个Application都有专属的Executor进程，并且在Application运行期间一直驻留。Executor进程以多线程的方式运行Task；</li>
<li>Spark运行过程与资源管理器无关，只要能获取Executor进程并保存通信即可；</li>
<li>Task采用数据本地性和推测执行等优化机制。数据本地性，即计算向数据靠拢，移动计算比移动数据占得网络资源要少。Spark采用延时调度机制，可在更大程度上实现执行过程优化。</li>
</ul>
]]></content>
      <tags>
        <tag>DataMining</tag>
        <tag>Tools</tag>
        <tag>Spark</tag>
      </tags>
  </entry>
  <entry>
    <title>数据挖掘-MapReduce</title>
    <url>/2017/03/14/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98-MapReduce/</url>
    <content><![CDATA[<blockquote>
<p>可以通过分布式进行大数据量的计算的软件框架</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">属性</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">优点</td>
<td align="center">短时间内完成大量工作</td>
</tr>
<tr>
<td align="center">缺点</td>
<td align="center">算法必须经过重写，需要对系统工程有一定理解</td>
</tr>
<tr>
<td align="center">适用</td>
<td align="center">数值型，标称型</td>
</tr>
</tbody></table>
<p>MapReduce 在大量节点组成的集群上运行（分布式计算）。</p>
<h1 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h1><ol>
<li>map阶段 : 单个作业被分成很多小分，输入数据也被切片分发到每个节点，各个节点只在本地数据上运算 对应运算代码称为mapper</li>
<li>sort&#x2F;combine阶段 ： 对mapper进行排序或组合</li>
<li>shuffle阶段：将map的输出作为reduce的输入的过程，MapReduce主要在这个地方优化</li>
<li>reduce阶段 : 每个mapper的输出通过某种方式组合（一般包括排序），排序后再被分成小份分发到各个节点进行下一步处理工作。对应运算代码称为reducer</li>
</ol>
<hr>
<ul>
<li>主节点控制 <strong>MapReduce</strong> 的作业流程</li>
<li><strong>MapReduce</strong> 的作业可以分成 <strong>map</strong> 任务和 <strong>reduce</strong> 任务</li>
<li><strong>map</strong> 任务之间不做数据交流，<strong>reduce</strong> 任务也一样（每个节点只处理自己的事务）</li>
<li>在 <strong>map</strong> 和  <strong>reduce</strong> 阶段之间，有一个 <strong>sort</strong> 或 <strong>combine</strong> 阶段</li>
<li>数据被重复存放在不同的机器上，以防某个机器失效</li>
<li><strong>mapper</strong> 和 <strong>reducer</strong> 传输的数据形式为 <strong>key&#x2F;value</strong> 对</li>
</ul>
]]></content>
      <tags>
        <tag>DataMining</tag>
      </tags>
  </entry>
  <entry>
    <title>数据挖掘-回归分析</title>
    <url>/2017/03/07/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98-%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<blockquote>
<p>原文<br><a class="link"   href="https://www.analyticsvidhya.com/blog/2015/08/comprehensive-guide-regression/" >https://www.analyticsvidhya.com/blog/2015/08/comprehensive-guide-regression/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>译文<br><a class="link"   href="http://blog.csdn.net/lynnucas/article/details/47948639" >http://blog.csdn.net/lynnucas/article/details/47948639 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<hr>
<blockquote>
<p>回归分析 : 是一种预测性的建模技术,使用曲线拟合数据点，最终获取到数据点的距离差异最小的曲线</p>
</blockquote>
<pre><code>回归主要三个度量：自变量的个数，因变量的类型以及回归线的形状
</code></pre>
<h1 id="线性回归-（Linear-Regression）"><a href="#线性回归-（Linear-Regression）" class="headerlink" title="线性回归 （Linear Regression）"></a>线性回归 （Linear Regression）</h1><blockquote>
<p>因变量是连续的，自变量可以是连续的也可以是离散的，回归线的性质是线性的。</p>
</blockquote>
<p>线性回归使用最佳的拟合直线（也就是回归线）在因变量（Y）和一个或多个自变量（X）之间建立一种关系。</p>
<p>用一个方程式来表示它，即Y&#x3D;a+b*X + e，其中a表示截距，b表示直线的斜率，e是误差项。这个方程可以根据给定的预测变量（s）来预测目标变量的值。</p>
<p>一元线性回归和多元线性回归的区别在于，多元线性回归有（&gt;1）个自变量，而一元线性回归通常只有1个自变量。</p>
<ul>
<li>自变量与因变量之间必须有线性关系</li>
<li>多元回归存在多重共线性，自相关性和异方差性。</li>
<li>线性回归对异常值非常敏感。它会严重影响回归线，最终影响预测值。</li>
<li>多重共线性会增加系数估计值的方差，使得在模型轻微变化下，估计非常敏感。结果就是系数估计值不稳定</li>
<li>在多个自变量的情况下，我们可以使用向前选择法，向后剔除法和逐步筛选法来选择最重要的自变量。</li>
</ul>
<h1 id="逻辑回归-（Logistic-Regression）"><a href="#逻辑回归-（Logistic-Regression）" class="headerlink" title="逻辑回归 （Logistic Regression）"></a>逻辑回归 （Logistic Regression）</h1><blockquote>
<p>逻辑回归是用来计算“事件&#x3D;Success”和“事件&#x3D;Failure”的概率。当因变量的类型属于二元（1 &#x2F; 0，真&#x2F;假，是&#x2F;否）变量时，我们就应该使用逻辑回归。</p>
</blockquote>
<p>因为在这里我们使用的是的二项分布（因变量），我们需要选择一个对于这个分布最佳的连结函数。它就是Logit函数。在上述方程中，通过观测样本的极大似然估计值来选择参数，而不是最小化平方和误差（如在普通回归使用的）。</p>
<ul>
<li>它广泛的用于分类问题。</li>
<li>逻辑回归不要求自变量和因变量是线性关系。它可以处理各种类型的关系，因为它对预测的相对风险指数OR使用了一个非线性的log转换。</li>
<li>为了避免过拟合和欠拟合，我们应该包括所有重要的变量。有一个很好的方法来确保这种情况，就是使用逐步筛选方法来估计逻辑回归。</li>
<li>它需要大的样本量，因为在样本数量较少的情况下，极大似然估计的效果比普通的最小二乘法差。</li>
<li>自变量不应该相互关联的，即不具有多重共线性。然而，在分析和建模中，我们可以选择包含分类变量相互作用的影响。</li>
<li>如果因变量的值是定序变量，则称它为序逻辑回归。</li>
<li>如果因变量是多类的话，则称它为多元逻辑回归。</li>
</ul>
<h1 id="多项式回归-（Polynomial-Regression）"><a href="#多项式回归-（Polynomial-Regression）" class="headerlink" title="多项式回归 （Polynomial Regression）"></a>多项式回归 （Polynomial Regression）</h1><blockquote>
<p>对于一个回归方程，如果自变量的指数大于1，那么它就是多项式回归方程。</p>
</blockquote>
<p>在这种回归模型中，最佳拟合线不是直线。而是一个用于拟合数据点的曲线。</p>
<ul>
<li>虽然会有一个诱导可以拟合一个高次多项式并得到较低的错误，但这可能会导致过拟合。你需要经常画出关系图来查看拟合情况，并且专注于保证拟合合理，既没有过拟合又没有欠拟合。</li>
<li>明显地向两端寻找曲线点，看看这些形状和趋势是否有意义。更高次的多项式最后可能产生怪异的推断结果。</li>
</ul>
<h1 id="逐步回归-（Stepwise-Regression）"><a href="#逐步回归-（Stepwise-Regression）" class="headerlink" title="逐步回归 （Stepwise Regression）"></a>逐步回归 （Stepwise Regression）</h1><blockquote>
<p>在处理多个自变量时，我们可以使用这种形式的回归。</p>
</blockquote>
<p>这一壮举是通过观察统计的值，如R-square，t-stats和AIC指标，来识别重要的变量。逐步回归通过同时添加&#x2F;删除基于指定标准的协变量来拟合模型。下面列出了一些最常用的逐步回归方法：</p>
<ul>
<li>标准逐步回归法做两件事情。即增加和删除每个步骤所需的预测。</li>
<li>向前选择法从模型中最显著的预测开始，然后为每一步添加变量。</li>
<li>向后剔除法与模型的所有预测同时开始，然后在每一步消除最小显着性的变量。</li>
</ul>
<p>这种建模技术的目的是使用最少的预测变量数来最大化预测能力。这也是处理高维数据集的方法之一。</p>
<h1 id="岭回归-（Ridge-Regression）"><a href="#岭回归-（Ridge-Regression）" class="headerlink" title="岭回归 （Ridge Regression）"></a>岭回归 （Ridge Regression）</h1><blockquote>
<p>岭回归分析是一种用于存在多重共线性（自变量高度相关）数据的技术。</p>
</blockquote>
<p>在多重共线性情况下，尽管最小二乘法（OLS）对每个变量很公平，但它们的差异很大，使得观测值偏移并远离真实值。岭回归通过给回归估计上增加一个偏差度，来降低标准误差。</p>
<p>在一个线性方程中，预测误差可以分解为2个子分量。一个是偏差，一个是方差。预测错误可能会由这两个分量或者这两个中的任何一个造成。</p>
<ul>
<li>除常数项以外，这种回归的假设与最小二乘回归类似；</li>
<li>它收缩了相关系数的值，但没有达到零，这表明它没有特征选择功能</li>
<li>这是一个正则化方法，并且使用的是L2正则化。</li>
</ul>
<h1 id="套索回归-（Lasso-Regression）"><a href="#套索回归-（Lasso-Regression）" class="headerlink" title="套索回归 （Lasso Regression）"></a>套索回归 （Lasso Regression）</h1><blockquote>
<p>它类似于岭回归，Lasso （Least Absolute Shrinkage and Selection Operator）也会惩罚回归系数的绝对值大小。</p>
</blockquote>
<p>此外，它能够减少变化程度并提高线性回归模型的精度。</p>
<p>Lasso 回归与Ridge回归有一点不同，它使用的惩罚函数是绝对值，而不是平方。这导致惩罚（或等于约束估计的绝对值之和）值使一些参数估计结果等于零。使用惩罚值越大，进一步估计会使得缩小值趋近于零。这将导致我们要从给定的n个变量中选择变量。</p>
<ul>
<li>除常数项以外，这种回归的假设与最小二乘回归类似；</li>
<li>它收缩系数接近零（等于零），这确实有助于特征选择；</li>
<li>这是一个正则化方法，使用的是L1正则化；</li>
</ul>
<p>如果预测的一组变量是高度相关的，Lasso 会选出其中一个变量并且将其它的收缩为零。</p>
<h1 id="弹性网络回归（ElasticNet-Regression）"><a href="#弹性网络回归（ElasticNet-Regression）" class="headerlink" title="弹性网络回归（ElasticNet Regression）"></a>弹性网络回归（ElasticNet Regression）</h1><blockquote>
<p>ElasticNet是Lasso和Ridge回归技术的混合体。</p>
</blockquote>
<p>它使用L1来训练并且L2优先作为正则化矩阵。当有多个相关的特征时，ElasticNet是很有用的。Lasso 会随机挑选他们其中的一个，而ElasticNet则会选择两个。</p>
<p>Lasso和Ridge之间的实际的优点是，它允许ElasticNet继承循环状态下Ridge的一些稳定性。</p>
<ul>
<li>在高度相关变量的情况下，它会产生群体效应；</li>
<li>选择变量的数目没有限制；</li>
<li>它可以承受双重收缩。</li>
</ul>
]]></content>
      <tags>
        <tag>转载</tag>
        <tag>DataMining</tag>
      </tags>
  </entry>
  <entry>
    <title>数据挖掘-决策树</title>
    <url>/2017/03/05/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98-%E5%86%B3%E7%AD%96%E6%A0%91/</url>
    <content><![CDATA[<blockquote>
<p>决策树：从属性相同的一类别事例推理树状规则分类方法</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">属性</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">优点</td>
<td align="center">计算复杂度不高，输出易于理解，中间值缺失不敏感，可以处理不相关特征数据</td>
</tr>
<tr>
<td align="center">缺点</td>
<td align="center">可能产生过拟合</td>
</tr>
<tr>
<td align="center">适用</td>
<td align="center">数值型，标称型</td>
</tr>
</tbody></table>
<h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><ol>
<li>生成决策树：关键&#x3D;&gt; 选择适合的属性作为判别依据</li>
<li>修剪决策树：生成决策树时未考虑的噪声影响，容易出现过拟合，预测效果差，预先剪枝，后剪枝</li>
<li>识别叶子节点：差异较大，为规则</li>
</ol>
<h1 id="ID3不足"><a href="#ID3不足" class="headerlink" title="ID3不足"></a>ID3不足</h1><ol>
<li>无法回溯，不一定是全局最优解</li>
<li>信息增益，信息熵偏向属性取值较多的属性</li>
<li>仅处理离散，不能处理连续属性</li>
<li>样本过小或包含噪声时，容易过拟合（Overfitting）</li>
</ol>
]]></content>
      <tags>
        <tag>DataMining</tag>
      </tags>
  </entry>
  <entry>
    <title>数据挖掘-朴素贝叶斯</title>
    <url>/2017/03/04/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98-%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF/</url>
    <content><![CDATA[<blockquote>
<p>朴素贝叶斯 (<strong>Naive Bayesian</strong>) : 通过随机事件A和B的条件概率（或边缘概率）判断规则是否可信</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">属性</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">优点</td>
<td align="center">数据较少仍然有效，可以处理多类别问题</td>
</tr>
<tr>
<td align="center">缺点</td>
<td align="center">对于输入数据敏感</td>
</tr>
<tr>
<td align="center">适用</td>
<td align="center">标称型</td>
</tr>
</tbody></table>
<h1 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h1><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://61.91.161.217/chart?cht=tx&chl=\Large p(y|x)=\frac{p(x|y)p(y)}{p(x)}"
                      style="border:none;"
                >

<h1 id="伪代码"><a href="#伪代码" class="headerlink" title="伪代码"></a>伪代码</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">计算每个类别特征数目</span><br><span class="line">对每个训练集：</span><br><span class="line">	对每个特征：</span><br><span class="line">		如果特征出现在集合中-&gt;增加该特征计数值</span><br><span class="line">		增加所有特征计数值</span><br><span class="line">	对每个特征：</span><br><span class="line">		对每条数据：</span><br><span class="line">			将该数据的数目除以总数据数目得到条件概率</span><br><span class="line">	返回每个特征的条件概率	</span><br></pre></td></tr></table></figure></div>]]></content>
      <tags>
        <tag>DataMining</tag>
      </tags>
  </entry>
  <entry>
    <title>数据挖掘-欠拟合与过拟合</title>
    <url>/2017/03/08/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98-%E6%AC%A0%E6%8B%9F%E5%90%88%E4%B8%8E%E8%BF%87%E6%8B%9F%E5%90%88/</url>
    <content><![CDATA[<blockquote>
<p>以MATLAB 模拟离散点</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_03_04_1.png"
                     
                ></p>
<blockquote>
<p>以下为欠拟合与过拟合图示：</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2017_03_04_2.png"
                     
                ></p>
<h1 id="欠拟合"><a href="#欠拟合" class="headerlink" title="欠拟合"></a>欠拟合</h1><blockquote>
<p>模型没有很好地捕捉到数据特征，不能够很好地拟合数据。</p>
</blockquote>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ol>
<li>添加其他特征项，有时候我们模型出现欠拟合的时候是因为特征项不够导致的，可以添加其他特征项来很好地解决。</li>
<li>添加多项式特征，这个在机器学习算法里面用的很普遍，例如将线性模型通过添加二次项或者三次项使模型泛化能力更强。</li>
<li>减少正则化参数，正则化的目的是用来防止过拟合的，但是现在模型出现了欠拟合，则需要减少正则化参数。</li>
</ol>
<h1 id="过拟合"><a href="#过拟合" class="headerlink" title="过拟合"></a>过拟合</h1><blockquote>
<p>模型数据学习过于彻底，噪声数据特征也学习了，后期测试无法很好地识别数据，不能正确的分类，模型泛化能力太差。</p>
</blockquote>
<h3 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h3><ol>
<li><p>重新清洗数据，导致过拟合的一个原因也有可能是数据不纯导致的，如果出现了过拟合就需要我们重新清洗数据。</p>
</li>
<li><p>增大数据的训练量，还有一个原因就是我们用于训练的数据量太小导致的，训练数据占总数据的比例过小。</p>
</li>
</ol>
]]></content>
      <tags>
        <tag>DataMining</tag>
      </tags>
  </entry>
  <entry>
    <title>数据挖掘-距离计算</title>
    <url>/2017/03/03/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98-%E8%B7%9D%E7%A6%BB%E8%AE%A1%E7%AE%97/</url>
    <content><![CDATA[<blockquote>
<p>计算样本间的“距离”(Distance) ，估算分类时不同样本之间的相似性度量(Similarity Measurement)。</p>
</blockquote>
<ol>
<li>欧氏距离</li>
<li>曼哈顿距离</li>
<li>切比雪夫距离</li>
<li>闵可夫斯基距离</li>
<li>标准化欧氏距离</li>
<li>马氏距离</li>
<li>夹角余弦</li>
<li>汉明距离</li>
<li>杰卡德距离&amp; 杰卡德相似系数</li>
<li>相关系数&amp; 相关距离</li>
<li>信息熵</li>
</ol>
]]></content>
      <tags>
        <tag>DataMining</tag>
      </tags>
  </entry>
  <entry>
    <title>概率学-随机变量</title>
    <url>/2017/03/02/%E6%A6%82%E7%8E%87%E5%AD%A6-%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<blockquote>
<p>作者：Vamei 出处：<a class="link"   href="http://www.cnblogs.com/vamei" >http://www.cnblogs.com/vamei <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 欢迎转载，也请保留这段声明。谢谢！</p>
</blockquote>
<blockquote>
<p>提示：若无法正确显示 LaTeX 公式<br>在hosts 文件中添加</p>
</blockquote>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">61.91.161.217	chart.googleapis.com</span><br></pre></td></tr></table></figure></div>

<p>我们了解了“样本空间”，“事件”，“概率”。样本空间中包含了一次实验所有可能的结果，事件是样本空间的一个子集，每个事件可以有一个发生的概率。概率是集合的一个“测度”。</p>
<p>这一讲，我们将讨论随机变量。	<strong>随机变量(random variable)</strong>	的本质是一个函数，是从样本空间的子集到实数的映射，将事件转换成一个数值。根据样本空间中的元素不同(即不同的实验结果)，随机变量的值也将随机产生。可以说，随机变量是“数值化”的实验结果。在现实生活中，实验结果可以是很“叙述性”，比如“男孩”，“女孩”。在数学家眼里，这些文字化的叙述太过繁琐，我们为什么不能拿数字来代表它们呢？</p>
<p>(数学家恐怕是很难成为文学家吧？)</p>
<p> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/%5Cimages%5C2017_03_01_1.jpg"
                     
                ></p>
<h1 id="离散随机变量"><a href="#离散随机变量" class="headerlink" title="离散随机变量"></a>离散随机变量</h1><p>在连续掷两次硬币的例子中，样本空间为:</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl= \Omega = \{ HH, HT, TH, TT \}"
                      style="border:none;"
                >


<p>这样的实验结果可以有很多数值化的方法，比如定义HH为400， HT为30， TH为0.2，TT为1。要注意的是，这里是用某个数字来代表样本空间的某个元素，这个数字并不是概率值。</p>
<p>如何对样本空间的元素数值化是根据现实需求的。比如说，根据出现正面的次数，我们将赢取不同的奖励。那么在分析时，可以取“结果中正面的次数”为随机变量。这样一个随机变量将有2, 1, 0三种可能的取值。该随机变量只能取离散的几个孤立值，这样一种随机变量称为	<strong>离散随机变量</strong>	。</p>
<p>映射关系如下:</p>
<table>
<thead>
<tr>
<th align="center">实验结果</th>
<th align="center">随机变量</th>
</tr>
</thead>
<tbody><tr>
<td align="center">HH</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">HT</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">TH</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">TT</td>
<td align="center">0</td>
</tr>
</tbody></table>
<p>我们通常用一个大写字母来表示一个随机变量，比如X。</p>
<p> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/%5Cimages%5C2017_03_01_2.png"
                     
                ></p>
<p>如果样本空间中的每个结果等概率，那么随机变量取值可能性为:</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl= P(X=2) = 0.25"
                      style="border:none;"
                >
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl= P(X=1) = 0.5"
                      style="border:none;"
                >
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl= P(X=0) = 0.25"
                      style="border:none;"
                >

<p>当X取 0 , 1 , 2 之外的值时，概率为 0 。注意到， X&#x3D;1 这个事件，实际上包含了两个元素，HT, TH。因此， X&#x3D;1 出现的概率较高。所有可能取值的概率和为 1 。</p>
<p>表示了随机变量在不同取值下的概率，称为	<strong>概率质量函数(PMF, probability mass function)</strong>	。我们将看到其他的表示概率分布的方式。</p>
<h1 id="累积分布函数"><a href="#累积分布函数" class="headerlink" title="累积分布函数"></a>累积分布函数</h1><p>上面的函数列出了每个取值的对应概率。等价的，我们可以用	<strong>累积分布函数(CDF, cumulative distribution function)</strong>	来表示随机变量的概率分布状况。在累积分布函数，我们列出的，总是随机变量X，在小于x的这个区间的概率和。当x增大时，X &lt; x包含的结果增加，概率和也相应增加。当x为正无穷时，实际上是所有情况的概率和，那么累积分布函数为1。</p>
<p>严格的定义为:</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl= F(x) = P(X \le x), -\infty < x < \infty"
                      style="border:none;"
                >

<p>我们可以绘制上面例子的CDF。</p>
<p> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/%5Cimages%5C2017_03_01_3.png"
                     
                ></p>
<p>这样的累积分布函数似乎并不比概率质量函数来得方便。但在后面，我们会很快看到它的优势。即它可以同时用于离散随机变量和连续随机变量。</p>
<p>上面的图片可以用如下代码生成:</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># By Vamei</span></span><br><span class="line"><span class="comment"># Plot the CDF of total number of heads in two flips</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">x = [-<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">y = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0.25</span>, <span class="number">0.25</span>, <span class="number">0.75</span>, <span class="number">0.75</span>, <span class="number">1.0</span>, <span class="number">1.0</span>]</span><br><span class="line"></span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax  = plt.subplot(<span class="number">111</span>)</span><br><span class="line"></span><br><span class="line">ax.plot(x, y)</span><br><span class="line">ax.set_ylim([-<span class="number">0.1</span>, <span class="number">1.1</span>])</span><br><span class="line">ax.set_title(<span class="string">&quot;CDF, total number of heads&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div>
<h1 id="连续随机变量"><a href="#连续随机变量" class="headerlink" title="连续随机变量"></a>连续随机变量</h1><p>随机变量还可以是连续取值，这样的随机变量称为	**连续随机变量(continuous random variable)**。比如，一个随机变量，可以随机的取0到1的任意数值。</p>
<p>当这样取值时，任意区间能实际上都有无穷多个结果。比如，我们测量温度，可以有1度和2度，但两者之间，还可以有1.1度，1.003度，1.658度等等无穷种结果。这样的话，每个结果的可能性都是无穷小。我们讨论的是某个区间内的概率，即<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl= P(a<X<b)"
                      style="border:none;"
                >，而不是具体某一数值的概率。在这样的情况下，分到各个结果的概率都无限趋近于0。显然，我们无法用概率质量函数来描述连续随机变量的分布。</p>
<p>我们这里遇到的困境是现代数学的一个相当的困扰。考虑一个线段，它是点的集合，并且有“长度”这样的测度。然而，线段上有无穷个多个点。讨论“每个点的长度”是完全没有意义的。将线段换成区间，将点换成取值，将长度换成概率，我们发现这两个问题异常相似。另一方面，我们知道，可以从线段上截取某一小段，而这一小段是可以有“长度”的。连续随机变量的概率定义，正依赖于此：对于连续随机变量，我们只讨论某个区间，比如从1.2到1.4这一区间的概率，而不讨论具体某个点，比如1.3的概率。 </p>
<p> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/%5Cimages%5C2017_03_01_4.jpg"
                     
                ></p>
<p> 观察一个很简单的连续随机分布。假设我们有一个随机数生成器，产生一个从0到1的实数，每个实数出现的概率相等。这样的一个分布被称为	**均匀分布(uniform distribution)**。直觉告诉我们，相同长度的每一段区间，对应的概率都相同。由此，[0, 0.5]是整个区间的一半，概率为1&#x2F;2。对于均匀分布来说，概率正好和区间长度这一测度等同。</p>
<p>我们尝试用更正式的方式来描述分布。累积分布函数本身就表示随机变量在一个区间概率，所以可以直接用于连续随机变量。即</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl= F(x) = P(X \le x), - \infty < x < \infty"
                      style="border:none;"
                >

<p>对于均匀分布来说，它的累积分布函数是:</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl= F(x) = F(x) = 0, x < 0"
                      style="border:none;"
                >
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl= F(x) = F(x) = x, 0 \le x \le 1"
                      style="border:none;"
                >
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl= F(x) = F(x) = 1, x > 1"
                      style="border:none;"
                >

<p>它类似从线段的一头到某一点的“长度”。这样，我们就知道了从起点到每一点的长度。如果我们想知道某个特定区间[a, b]的概率，它就是F(b) - F(a)。</p>
<p> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/%5Cimages%5C2017_03_01_5.png"
                     
                ></p>
<p>借用“无穷小”的概念，我们可以构建	<strong>概率密度函数(PDF，probability density function)</strong>	。粗糙的讲，我们在某个点附近取一个“无穷小”段，该小段的区间长度为dx，而这个“无穷小”段对应的概率为dF，那么该点的概率密度为dF&#x2F;dx。这实际上是微积分的领域。</p>
<p>概率密度函数可以代替累积分布函数，来表示一个连续随机变量的概率分布:</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl= f(x) = \frac{dF(x)}{dx}"
                      style="border:none;"
                >

<p>即密度函数是累积分布函数的微分，或者说，</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl= F(x) = \int_{-\infty}^x f(u)du"
                      style="border:none;"
                >

<p>即累积分布函数是密度函数从负无穷到x的积分。</p>
<p>密度函数满足:</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl= \int_{-\infty}^{+\infty} f(u)du = 1"
                      style="border:none;"
                >

<p>均匀分布的密度函数可以写成:</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://chart.googleapis.com/chart?cht=tx&chl= f(x) = \left\{ \begin{array}{l} 1, 0 \leq x \leq 1 \\ 0, x<0 \, or \, x>1 \end{array}\right."
                      style="border:none;"
                >

<p>可以画出该密度函数</p>
<p> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/%5Cimages%5C2017_03_01_6.png"
                     
                ></p>
<p>对一个函数的积分，获得的是该函数曲线下的面积。因此，<strong>密度曲线下某个区间的面积</strong>，就是密度概率函数的积分，代表了随机变量在该区间的概率。概率密度函数就可以非常直观的通过“面积”，来表示概率的大小。</p>
<p>从负无穷到正无穷积分，就代表了所有可能结果的概率和，即为1。</p>
<p>上面的图片可以利用下面代码生成:</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># By Vamei</span></span><br><span class="line"><span class="comment"># Density function for uniform distribution</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">x = [-<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">y = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax = plt.subplot(<span class="number">111</span>)</span><br><span class="line"></span><br><span class="line">ax.plot(x, y)</span><br><span class="line">ax.set_xlim([-<span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line">ax.set_ylim([-<span class="number">0.1</span>, <span class="number">1.1</span>])</span><br><span class="line">ax.set_title(<span class="string">&quot;density function for uniform distribution&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div>

<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>随机变量，随机变量的概率分布</p>
<p>累积分布函数</p>
<p>密度函数</p>
]]></content>
      <tags>
        <tag>转载</tag>
        <tag>概率学</tag>
      </tags>
  </entry>
  <entry>
    <title>熵</title>
    <url>/2017/03/01/%E7%86%B5/</url>
    <content><![CDATA[<blockquote>
<p>熵 （Entropy）: 热力学第二定律，熵反映了状态的无序程度。范围（0~1）值越大越混乱。</p>
</blockquote>
<p>物体从一种有序转变为另一种有序状态，必经过一个无序状态。无序状态程度即为熵。而为了消除这种无序使其有序，需要额外的能量。在信息中则是变量的不确定性越大，熵也就越大，把它搞清楚所需要的信息量也就越大。 </p>
<p>一个系统越是有序，信息熵就越低；反之，一个系统越是混乱，信息熵就越高。所以，信息熵也可以说是系统有序化程度的一个度量。</p>
<h1 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h1><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="http://61.91.161.217/chart?cht=tx&chl={H_s={\sum^{n}+_{i=1}p_iI_e}={-\sum^{n}+_{i=1}{p_ilogp_i}"
                      style="border:none;"
                >

<p>而我们也可能是宇宙由起点至终点两个有序状态中的熵。（热寂宇宙末日假说，也是在熵的概念上提出的）</p>
<pre><code>熵的概念也被广泛应用到各个领域（热力学、统计学、信息学、天文学）
</code></pre>
]]></content>
      <tags>
        <tag>DataMining</tag>
      </tags>
  </entry>
  <entry>
    <title>选择 www 或非 www URL 作为域名</title>
    <url>/2017/02/13/%E9%80%89%E6%8B%A9-www-%E6%88%96%E9%9D%9E-www-URL-%E4%BD%9C%E4%B8%BA%E5%9F%9F%E5%90%8D/</url>
    <content><![CDATA[<blockquote>
<p>选择非 www 或 www 作为网址，对于网站持有者是一个反复出现的问题。本页将会提供了一些有用的相关建议。</p>
</blockquote>
<h1 id="什么是域名？"><a href="#什么是域名？" class="headerlink" title="什么是域名？"></a>什么是域名？</h1><p>在 HTTP URL 中，跟在网址头部 http:&#x2F;&#x2F; 或 https:&#x2F;&#x2F; 后面的第一个子字符串称为域，它是网站文件资源所在的服务器的名称。</p>
<p>服务器不一定是物理机：几台服务器可以驻留在同一台物理机器上，或者一台服务器可以通过几台机器进行处理，协作处理并响应或负载均衡它们之间的请求。关键点在于语义上一个域名代表一个单独的服务器。</p>
<h1 id="所以，我只能选择其中一个做为我的网站的网址？"><a href="#所以，我只能选择其中一个做为我的网站的网址？" class="headerlink" title="所以，我只能选择其中一个做为我的网站的网址？"></a>所以，我只能选择其中一个做为我的网站的网址？</h1><p>是的，你必须选择其中之一，并坚持使用。选择并使用其中哪一个取决于你，但无论你选择那一个，保持下去。这将让你的网站在用户使用搜索引擎检索时更加准确与一致。这包括始终链接到所选域名（如果你在网站中使用相对网址，则不应该很难），也可以始终将链接（通过电子邮件&#x2F;社交网络等）共享使用同一个域名。<br>不，你不能有两个。最重要的是，你是保持的那一个官方的域名，这个官方域名被称为规范名称。你所有的绝对链接应该使用它。但即便如此，你仍然可以有其他域名使用：HTTP允许使用两种技术，以便它在使用规范域名的同时还允许非规范域名使用，使使用者或搜索引擎可以准确的访问到所预期的页面。<br>所以，选择其中一个作为你的域名的规范地址！下面有两种技术允许不规范的域名仍然起作用。</p>
<h1 id="规范网址方式"><a href="#规范网址方式" class="headerlink" title="规范网址方式"></a>规范网址方式</h1><p>选择下面有两种不同的方式使网站规范。</p>
<h3 id="使用HTTP301重定向"><a href="#使用HTTP301重定向" class="headerlink" title="使用HTTP301重定向"></a>使用HTTP301重定向</h3><p>在这种情况下，你需要配置服务器接收的HTTP请求（ 常见为 www 和非 www 网址相同）以及适当的HTTP响应 301 去响应所有非规范的域名请求。这会将尝试使访问非规范网址的浏览器重定向到其规范的等效网址。举例来说，如果您选择使用非 www 网址为规范类型，你的所有 www 网址都应该被重定向到对应的非 www 网址上。</p>
<p>例如：</p>
<ol>
<li>服务器收到 <a class="link"   href="http://www.example.org/whaddup" >http://www.example.org/whaddup <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 请求（当规范域名是 example.org 时）</li>
<li>服务器则以代码 301 与头 Location ：<a class="link"   href="http://example.org/whaddup" >http://example.org/whaddup <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>该客户端发出的规范的域名请求：<a class="link"   href="http://example.org/whatddup" >http://example.org/whatddup <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ol>
<p><a class="link"   href="https://github.com/h5bp/html5-boilerplate" >HTML5 boilerplate project <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>  有一个示例 <a class="link"   href="https://github.com/h5bp/html5-boilerplate/blob/7a22a33d4041c479d0962499e853501073811887/.htaccess#L219-L258" >how to configure an Apache server to redirect one domain to the other <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
<h3 id="使用-HTML-标签元素"><a href="#使用-HTML-标签元素" class="headerlink" title="使用 HTML 标签元素"></a>使用 HTML 标签元素</h3><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;link rel=<span class="string">&quot;canonical&quot;</span>&gt;</span><br></pre></td></tr></table></figure></div>

<p>它可以将一个特殊的 HTML <link> 元素添加到网页指示什么网页的标准地址，这对页面的访问者没有影响，但在搜索引擎检索时会告诉搜索引擎当页面实际的地址。通过这种方式，搜索引擎不需要索引同一页面多次，那样可能导致它被视为重复的内容或垃圾邮件，甚至从搜索引擎结果中删除或者降低你的页面显示排名。</p>
<p>当加入这样一个标签，会告诉搜索引擎，你提供相同内容的两个域名那一个是规范的。<br>以上方为例，</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://www.example.org/whaddup</span><br></pre></td></tr></table></figure></div>
<p>将提供与 </p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://example.org/whaddup</span><br></pre></td></tr></table></figure></div>
<p> 相同的内容，但有一个附加的 <link> 头部元素：</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;link href=<span class="string">&quot;http://example.org/whaddup&quot;</span> rel=<span class="string">&quot;canonical&quot;</span>&gt; </span><br></pre></td></tr></table></figure></div>

<p>不同于以往，浏览器历史记录将考虑非 www 和 www 的网址作为独立的条目。</p>
<h1 id="请使用两者中的一个为你的网页服务"><a href="#请使用两者中的一个为你的网页服务" class="headerlink" title="请使用两者中的一个为你的网页服务"></a>请使用两者中的一个为你的网页服务</h1><p>有了这些技术，您可以将服务器配置为两个正确响应， www 的前缀和非 www 前缀的域名，这是要做到这一点，因为你无法预测哪些 URL 用户输入他们的浏览器的 URL 好的建议酒吧，这是选择你要作为规范的位置使用，然后重定向其他类型的它哪种类型的问题。</p>
<h1 id="根据情况决定使用"><a href="#根据情况决定使用" class="headerlink" title="根据情况决定使用"></a>根据情况决定使用</h1><p>可以认为这是一个非常主观 <a class="link"   href="http://bikeshed.com/" >bikeshedding <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 问题。 如果你想更深入的阅读，请参阅  <a class="link"   href="http://www.hyperarts.com/blog/www-vs-non-www-for-your-canonical-domain-url-which-is-best-and-why/" >WWW vs non-WWW for your Canonical Domain URL – Which is Best and Why? <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，它可能提出进一步的见解。</p>
<h1 id="请参阅"><a href="#请参阅" class="headerlink" title="请参阅"></a>请参阅</h1><p><a class="link"   href="http://www.chrisfinke.com/2011/07/25/what-do-people-type-in-the-address-bar/" >Stats on what people type in the URL bar <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> (2011)</p>
<h1 id="源网页"><a href="#源网页" class="headerlink" title="源网页"></a>源网页</h1><ul>
<li>英文版 <a class="link"   href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Choosing_between_www_and_non-www_URLs" >Choosing between www and non-www URLs <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>中文版 <a class="link"   href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/%E9%80%89%E6%8B%A9_www_%E6%88%96%E9%9D%9E_www_URL_%E4%BD%9C%E4%B8%BA%E5%9F%9F%E5%90%8D" >选择 www 或非 www URL 作为域名 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <tags>
        <tag>HTTP</tag>
      </tags>
  </entry>
</search>
